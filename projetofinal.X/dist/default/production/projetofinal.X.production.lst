

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug 01 16:18:46 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.32
    44                           ; Generated 02/02/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	smallconst
    80  000600                     __psmallconst:
    81                           	callstack 0
    82  000600  00                 	db	0
    83  000601                     _valor@ssd$F502:
    84                           	callstack 0
    85  000601  3F                 	db	63
    86  000602  06                 	db	6
    87  000603  5B                 	db	91
    88  000604  4F                 	db	79
    89  000605  66                 	db	102
    90  000606  6D                 	db	109
    91  000607  7D                 	db	125
    92  000608  07                 	db	7
    93  000609  7F                 	db	127
    94  00060A  6F                 	db	111
    95  00060B  77                 	db	119
    96  00060C  7C                 	db	124
    97  00060D  39                 	db	57
    98  00060E  5E                 	db	94
    99  00060F  79                 	db	121
   100  000610  71                 	db	113
   101  000611                     __end_of_valor@ssd$F502:
   102                           	callstack 0
   103  000611                     STR_14:
   104  000611  20                 	db	32
   105  000612  20                 	db	32
   106  000613  20                 	db	32
   107  000614  53                 	db	83	;'S'
   108  000615  6D                 	db	109	;'m'
   109  000616  61                 	db	97	;'a'
   110  000617  72                 	db	114	;'r'
   111  000618  74                 	db	116	;'t'
   112  000619  20                 	db	32
   113  00061A  52                 	db	82	;'R'
   114  00061B  6F                 	db	111	;'o'
   115  00061C  6F                 	db	111	;'o'
   116  00061D  6D                 	db	109	;'m'
   117  00061E  20                 	db	32
   118  00061F  20                 	db	32
   119  000620  20                 	db	32
   120  000621  00                 	db	0
   121  000622                     STR_13:
   122  000622  49                 	db	73	;'I'
   123  000623  6E                 	db	110	;'n'
   124  000624  69                 	db	105	;'i'
   125  000625  63                 	db	99	;'c'
   126  000626  69                 	db	105	;'i'
   127  000627  61                 	db	97	;'a'
   128  000628  6C                 	db	108	;'l'
   129  000629  69                 	db	105	;'i'
   130  00062A  7A                 	db	122	;'z'
   131  00062B  61                 	db	97	;'a'
   132  00062C  6E                 	db	110	;'n'
   133  00062D  64                 	db	100	;'d'
   134  00062E  6F                 	db	111	;'o'
   135  00062F  2E                 	db	46
   136  000630  2E                 	db	46
   137  000631  2E                 	db	46
   138  000632  00                 	db	0
   139  000633                     STR_15:
   140  000633  62                 	db	98	;'b'
   141  000634  79                 	db	121	;'y'
   142  000635  3A                 	db	58	;':'
   143  000636  20                 	db	32
   144  000637  4F                 	db	79	;'O'
   145  000638  72                 	db	114	;'r'
   146  000639  6C                 	db	108	;'l'
   147  00063A  61                 	db	97	;'a'
   148  00063B  6E                 	db	110	;'n'
   149  00063C  64                 	db	100	;'d'
   150  00063D  6F                 	db	111	;'o'
   151  00063E  20                 	db	32
   152  00063F  42                 	db	66	;'B'
   153  000640  65                 	db	101	;'e'
   154  000641  63                 	db	99	;'c'
   155  000642  6F                 	db	111	;'o'
   156  000643  00                 	db	0
   157  000644                     STR_11:
   158  000644  39                 	db	57	;'9'
   159  000645  2D                 	db	45
   160  000646  50                 	db	80	;'P'
   161  000647  6F                 	db	111	;'o'
   162  000648  72                 	db	114	;'r'
   163  000649  74                 	db	116	;'t'
   164  00064A  61                 	db	97	;'a'
   165  00064B  3A                 	db	58	;':'
   166  00064C  00                 	db	0
   167  00064D                     STR_12:
   168  00064D  23                 	db	35
   169  00064E  2D                 	db	45
   170  00064F  41                 	db	65	;'A'
   171  000650  71                 	db	113	;'q'
   172  000651  75                 	db	117	;'u'
   173  000652  65                 	db	101	;'e'
   174  000653  63                 	db	99	;'c'
   175  000654  3A                 	db	58	;':'
   176  000655  00                 	db	0
   177  000656                     STR_5:
   178  000656  4F                 	db	79	;'O'
   179  000657  50                 	db	80	;'P'
   180  000658  45                 	db	69	;'E'
   181  000659  4E                 	db	78	;'N'
   182  00065A  20                 	db	32
   183  00065B  20                 	db	32
   184  00065C  20                 	db	32
   185  00065D  00                 	db	0
   186  00065E                     STR_6:
   187  00065E  43                 	db	67	;'C'
   188  00065F  4C                 	db	76	;'L'
   189  000660  4F                 	db	79	;'O'
   190  000661  53                 	db	83	;'S'
   191  000662  45                 	db	69	;'E'
   192  000663  44                 	db	68	;'D'
   193  000664  20                 	db	32
   194  000665  00                 	db	0
   195  000666                     STR_10:
   196  000666  36                 	db	54	;'6'
   197  000667  2D                 	db	45
   198  000668  56                 	db	86	;'V'
   199  000669  65                 	db	101	;'e'
   200  00066A  6E                 	db	110	;'n'
   201  00066B  74                 	db	116	;'t'
   202  00066C  3A                 	db	58	;':'
   203  00066D  00                 	db	0
   204  00066E                     STR_2:
   205  00066E  4F                 	db	79	;'O'
   206  00066F  4E                 	db	78	;'N'
   207  000670  20                 	db	32
   208  000671  20                 	db	32
   209  000672  20                 	db	32
   210  000673  20                 	db	32
   211  000674  00                 	db	0
   212  000675                     STR_1:
   213  000675  4F                 	db	79	;'O'
   214  000676  46                 	db	70	;'F'
   215  000677  46                 	db	70	;'F'
   216  000678  20                 	db	32
   217  000679  20                 	db	32
   218  00067A  20                 	db	32
   219  00067B  00                 	db	0
   220  00067C                     STR_9:
   221  00067C  33                 	db	51	;'3'
   222  00067D  2D                 	db	45
   223  00067E  4C                 	db	76	;'L'
   224  00067F  75                 	db	117	;'u'
   225  000680  7A                 	db	122	;'z'
   226  000681  3A                 	db	58	;':'
   227  000682  00                 	db	0
   228  000683                     STR_4:
   229  000683  4F                 	db	79	;'O'
   230  000684  4E                 	db	78	;'N'
   231  000685  20                 	db	32
   232  000686  20                 	db	32
   233  000687  00                 	db	0
   234  000688                     STR_7:
   235  000688  4F                 	db	79	;'O'
   236  000689  46                 	db	70	;'F'
   237  00068A  46                 	db	70	;'F'
   238  00068B  20                 	db	32
   239  00068C  00                 	db	0
   240  00068D                     STR_18:
   241  00068D  4F                 	db	79	;'O'
   242  00068E  50                 	db	80	;'P'
   243  00068F  45                 	db	69	;'E'
   244  000690  4E                 	db	78	;'N'
   245  000691  00                 	db	0
   246  000692                     STR_16:
   247  000692  4F                 	db	79	;'O'
   248  000693  46                 	db	70	;'F'
   249  000694  46                 	db	70	;'F'
   250  000695  00                 	db	0
   251  000696  00                 	db	0	; dummy byte at the end
   252  0000                     
   253                           	psect	nvCOMRAM
   254  000028                     __pnvCOMRAM:
   255                           	callstack 0
   256  000028                     _tecla:
   257                           	callstack 0
   258  000028                     	ds	2
   259  0000                     _PORTE	set	3972
   260  0000                     _PORTD	set	3971
   261  0000                     _PORTC	set	3970
   262  0000                     _PORTA	set	3968
   263  0000                     _ADRESL	set	4035
   264  0000                     _ADRESH	set	4036
   265  0000                     _ADCON2	set	4032
   266  0000                     _ADCON0	set	4034
   267  0000                     _PORTEbits	set	3972
   268  0000                     _PORTCbits	set	3970
   269  0000                     _PORTB	set	3969
   270  0000                     _TRISE	set	3990
   271  0000                     _TRISD	set	3989
   272  0000                     _TRISC	set	3988
   273  0000                     _TRISB	set	3987
   274  0000                     _TRISA	set	3986
   275  0000                     _ADCON1	set	4033
   276                           
   277                           ; #config settings
   278                           
   279                           	psect	cinit
   280  00153E                     __pcinit:
   281                           	callstack 0
   282  00153E                     start_initialization:
   283                           	callstack 0
   284  00153E                     __initialization:
   285                           	callstack 0
   286                           
   287                           ; Clear objects allocated to COMRAM (21 bytes)
   288  00153E  EE00  F001         	lfsr	0,__pbssCOMRAM
   289  001542  0E15               	movlw	21
   290  001544                     clear_0:
   291  001544  6AEE               	clrf	postinc0,c
   292  001546  06E8               	decf	wreg,f,c
   293  001548  E1FD               	bnz	clear_0
   294  00154A                     end_of_initialization:
   295                           	callstack 0
   296  00154A                     __end_of__initialization:
   297                           	callstack 0
   298  00154A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   299  00154C  6EF8               	movwf	tblptru,c
   300  00154E  0100               	movlb	0
   301  001550  EFB6  F008         	goto	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMRAM
   304  000001                     __pbssCOMRAM:
   305                           	callstack 0
   306  000001                     kpDebounce@valorAntigo:
   307                           	callstack 0
   308  000001                     	ds	2
   309  000003                     kpDebounce@valorNovo:
   310                           	callstack 0
   311  000003                     	ds	2
   312  000005                     _valor:
   313                           	callstack 0
   314  000005                     	ds	2
   315  000007                     _estadoAquec:
   316                           	callstack 0
   317  000007                     	ds	2
   318  000009                     _estadoLuz:
   319                           	callstack 0
   320  000009                     	ds	2
   321  00000B                     _estadoVent:
   322                           	callstack 0
   323  00000B                     	ds	2
   324  00000D                     _estadoPorta:
   325                           	callstack 0
   326  00000D                     	ds	2
   327  00000F                     _v3:
   328                           	callstack 0
   329  00000F                     	ds	1
   330  000010                     _v2:
   331                           	callstack 0
   332  000010                     	ds	1
   333  000011                     _v1:
   334                           	callstack 0
   335  000011                     	ds	1
   336  000012                     _v0:
   337                           	callstack 0
   338  000012                     	ds	1
   339  000013                     _display:
   340                           	callstack 0
   341  000013                     	ds	1
   342  000014                     kpDebounce@tempo:
   343                           	callstack 0
   344  000014                     	ds	1
   345  000015                     _vel:
   346                           	callstack 0
   347  000015                     	ds	1
   348                           
   349                           	psect	cstackCOMRAM
   350  000016                     __pcstackCOMRAM:
   351                           	callstack 0
   352  000016                     ??_kpDebounce:
   353  000016                     ?_kpRead:
   354                           	callstack 0
   355  000016                     ?_adcRead:
   356                           	callstack 0
   357  000016                     ?___lwdiv:
   358                           	callstack 0
   359  000016                     Delay40us@i:
   360                           	callstack 0
   361  000016                     adcRead@channel:
   362                           	callstack 0
   363  000016                     digitalWrite@pin:
   364                           	callstack 0
   365  000016                     pinMode@pin:
   366                           	callstack 0
   367  000016                     ___lwdiv@dividend:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x0
   371  000016                     	ds	1
   372  000017                     Delay2ms@i:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x1
   376  000017                     	ds	1
   377  000018                     adcRead@ADvalor:
   378                           	callstack 0
   379  000018                     digitalWrite@value:
   380                           	callstack 0
   381  000018                     pinMode@type:
   382                           	callstack 0
   383  000018                     ___lwdiv@divisor:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x2
   387  000018                     	ds	2
   388  00001A                     ??_pinMode:
   389  00001A                     ??_digitalWrite:
   390  00001A                     ?___wmul:
   391                           	callstack 0
   392  00001A                     ___wmul@multiplier:
   393                           	callstack 0
   394  00001A                     ___lwdiv@quotient:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x4
   398  00001A                     	ds	1
   399  00001B                     kpDebounce@old_D:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x5
   403  00001B                     	ds	1
   404  00001C                     lcdCommand@old_D:
   405                           	callstack 0
   406  00001C                     lcdData@valor:
   407                           	callstack 0
   408  00001C                     ___lwdiv@counter:
   409                           	callstack 0
   410  00001C                     kpDebounce@k:
   411                           	callstack 0
   412  00001C                     ___wmul@multiplicand:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x6
   416  00001C                     	ds	1
   417  00001D                     lcdCommand@cmd:
   418                           	callstack 0
   419  00001D                     lcdData@old_D:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x7
   423  00001D                     	ds	1
   424  00001E                     kpDebounce@j:
   425                           	callstack 0
   426  00001E                     lcd_str@str:
   427                           	callstack 0
   428  00001E                     ___wmul@product:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x8
   432  00001E                     	ds	1
   433  00001F                     kpDebounce@i:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x9
   437  00001F                     	ds	1
   438  000020                     ??_lcd_str:
   439  000020                     ??_pwmSet1:
   440  000020                     ?___awdiv:
   441                           	callstack 0
   442  000020                     atraso_s@t:
   443                           	callstack 0
   444  000020                     ___awdiv@dividend:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0xA
   448  000020                     	ds	2
   449  000022                     pwmSet1@porcento:
   450                           	callstack 0
   451  000022                     lcd_str@i:
   452                           	callstack 0
   453  000022                     atraso_s@i:
   454                           	callstack 0
   455  000022                     ___awdiv@divisor:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0xC
   459  000022                     	ds	1
   460  000023                     ??_escolheOpcoes:
   461  000023                     pwmSet1@val:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xD
   465  000023                     	ds	1
   466  000024                     atraso_s@j:
   467                           	callstack 0
   468  000024                     ___awdiv@counter:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0xE
   472  000024                     	ds	1
   473  000025                     atraso_s@k:
   474                           	callstack 0
   475  000025                     ___awdiv@sign:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0xF
   479  000025                     	ds	1
   480  000026                     escolheOpcoes@aux:
   481                           	callstack 0
   482  000026                     ___awdiv@quotient:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x10
   486  000026                     	ds	2
   487  000028                     
   488                           ; 1 bytes @ 0x12
   489 ;;
   490 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   491 ;;
   492 ;; *************** function _main *****************
   493 ;; Defined at:
   494 ;;		line 30 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   508 ;;      Params:         0       0       0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels required when called: 5
   514 ;; This function calls:
   515 ;;		_adcInit
   516 ;;		_contrVent
   517 ;;		_escolheOpcoes
   518 ;;		_kpInit
   519 ;;		_lcdInit
   520 ;;		_lcdPrintInicio
   521 ;;		_pwmInit
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text0
   528  00116C                     __ptext0:
   529                           	callstack 0
   530  00116C                     _main:
   531                           	callstack 26
   532  00116C                     
   533                           ;main.c: 31:     ADCON1 = 0x06;
   534  00116C  0E06               	movlw	6
   535  00116E  6EC1               	movwf	193,c	;volatile
   536                           
   537                           ;main.c: 32:     TRISA = 0xC3;
   538  001170  0EC3               	movlw	195
   539  001172  6E92               	movwf	146,c	;volatile
   540                           
   541                           ;main.c: 33:     TRISB = 0x07;
   542  001174  0E07               	movlw	7
   543  001176  6E93               	movwf	147,c	;volatile
   544                           
   545                           ;main.c: 34:     TRISC = 0x00;
   546  001178  0E00               	movlw	0
   547  00117A  6E94               	movwf	148,c	;volatile
   548                           
   549                           ;main.c: 35:     TRISD = 0x00;
   550  00117C  0E00               	movlw	0
   551  00117E  6E95               	movwf	149,c	;volatile
   552                           
   553                           ;main.c: 36:     TRISE = 0x00;
   554  001180  0E00               	movlw	0
   555  001182  6E96               	movwf	150,c	;volatile
   556                           
   557                           ;main.c: 37:     tecla = 16;
   558  001184  0E00               	movlw	0
   559  001186  6E29               	movwf	(_tecla+1)^0,c
   560  001188  0E10               	movlw	16
   561  00118A  6E28               	movwf	_tecla^0,c
   562                           
   563                           ;main.c: 38:     estadoPorta = 0;
   564  00118C  0E00               	movlw	0
   565  00118E  6E0E               	movwf	(_estadoPorta+1)^0,c
   566  001190  0E00               	movlw	0
   567  001192  6E0D               	movwf	_estadoPorta^0,c
   568                           
   569                           ;main.c: 39:     estadoVent = 0;
   570  001194  0E00               	movlw	0
   571  001196  6E0C               	movwf	(_estadoVent+1)^0,c
   572  001198  0E00               	movlw	0
   573  00119A  6E0B               	movwf	_estadoVent^0,c
   574                           
   575                           ;main.c: 40:     estadoLuz = 0;
   576  00119C  0E00               	movlw	0
   577  00119E  6E0A               	movwf	(_estadoLuz+1)^0,c
   578  0011A0  0E00               	movlw	0
   579  0011A2  6E09               	movwf	_estadoLuz^0,c
   580                           
   581                           ;main.c: 41:     estadoAquec = 0;
   582  0011A4  0E00               	movlw	0
   583  0011A6  6E08               	movwf	(_estadoAquec+1)^0,c
   584  0011A8  0E00               	movlw	0
   585  0011AA  6E07               	movwf	_estadoAquec^0,c
   586  0011AC                     
   587                           ;main.c: 43:     adcInit();
   588  0011AC  EC5A  F00A         	call	_adcInit	;wreg free
   589  0011B0                     
   590                           ;main.c: 44:     pwmInit();
   591  0011B0  ECAA  F00A         	call	_pwmInit	;wreg free
   592  0011B4                     
   593                           ;main.c: 45:     lcdInit();
   594  0011B4  EC0A  F008         	call	_lcdInit	;wreg free
   595  0011B8                     
   596                           ;main.c: 46:     kpInit();
   597  0011B8  ECB4  F00A         	call	_kpInit	;wreg free
   598  0011BC                     
   599                           ;main.c: 47:     lcdPrintInicio();
   600  0011BC  EC32  F007         	call	_lcdPrintInicio	;wreg free
   601  0011C0                     l2146:
   602                           
   603                           ;main.c: 50:         escolheOpcoes();
   604  0011C0  EC59  F006         	call	_escolheOpcoes	;wreg free
   605  0011C4                     
   606                           ;main.c: 51:         contrVent();
   607  0011C4  ECE8  F008         	call	_contrVent	;wreg free
   608                           
   609                           ;main.c: 52:     }
   610  0011C8  EFE0  F008         	goto	l2146
   611  0011CC  EF00  F000         	goto	start
   612  0011D0                     __end_of_main:
   613                           	callstack 0
   614                           
   615 ;; *************** function _pwmInit *****************
   616 ;; Defined at:
   617 ;;		line 59 in file "pwm.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   631 ;;      Params:         0       0       0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0       0       0
   634 ;;      Totals:         0       0       0       0       0       0       0
   635 ;;Total ram usage:        0 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text1
   645  001554                     __ptext1:
   646                           	callstack 0
   647  001554                     _pwmInit:
   648                           	callstack 30
   649  001554                     
   650                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
   651  001554  9294               	bcf	148,1,c	;volatile
   652                           
   653                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
   654  001556  9494               	bcf	148,2,c	;volatile
   655  001558                     
   656                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
   657  001558  0E03               	movlw	3
   658  00155A  12CA               	iorwf	202,f,c	;volatile
   659  00155C                     
   660                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
   661  00155C  84CA               	bsf	202,2,c	;volatile
   662                           
   663                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
   664  00155E  0E0C               	movlw	12
   665  001560  12BD               	iorwf	189,f,c	;volatile
   666                           
   667                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
   668  001562  0E0C               	movlw	12
   669  001564  12BA               	iorwf	186,f,c	;volatile
   670  001566  0012               	return		;funcret
   671  001568                     __end_of_pwmInit:
   672                           	callstack 0
   673                           
   674 ;; *************** function _lcdPrintInicio *****************
   675 ;; Defined at:
   676 ;;		line 156 in file "main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   690 ;;      Params:         0       0       0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 4
   697 ;; This function calls:
   698 ;;		_atraso_s
   699 ;;		_lcdCommand
   700 ;;		_lcdPrint
   701 ;;		_lcd_str
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text2
   708  000E64                     __ptext2:
   709                           	callstack 0
   710  000E64                     _lcdPrintInicio:
   711                           	callstack 26
   712  000E64                     
   713                           ;main.c: 157:     lcdCommand(0x01);
   714  000E64  0E01               	movlw	1
   715  000E66  EC8F  F007         	call	_lcdCommand
   716                           
   717                           ;main.c: 158:     lcdCommand(0x0C);
   718  000E6A  0E0C               	movlw	12
   719  000E6C  EC8F  F007         	call	_lcdCommand
   720                           
   721                           ;main.c: 159:     lcdCommand(0x40);
   722  000E70  0E40               	movlw	64
   723  000E72  EC8F  F007         	call	_lcdCommand
   724                           
   725                           ;main.c: 160:     lcdCommand(0x80);
   726  000E76  0E80               	movlw	128
   727  000E78  EC8F  F007         	call	_lcdCommand
   728  000E7C                     
   729                           ;main.c: 161:     lcd_str("Inicializando...");
   730  000E7C  0E22               	movlw	low STR_13
   731  000E7E  6E1E               	movwf	lcd_str@str^0,c
   732  000E80  0E06               	movlw	high STR_13
   733  000E82  6E1F               	movwf	(lcd_str@str+1)^0,c
   734  000E84  ECE4  F009         	call	_lcd_str	;wreg free
   735  000E88                     
   736                           ;main.c: 162:     atraso_s(2);
   737  000E88  0E00               	movlw	0
   738  000E8A  6E21               	movwf	(atraso_s@t+1)^0,c
   739  000E8C  0E02               	movlw	2
   740  000E8E  6E20               	movwf	atraso_s@t^0,c
   741  000E90  ECCE  F007         	call	_atraso_s	;wreg free
   742  000E94                     
   743                           ;main.c: 163:     lcdCommand(0xC0);
   744  000E94  0EC0               	movlw	192
   745  000E96  EC8F  F007         	call	_lcdCommand
   746  000E9A                     
   747                           ;main.c: 164:     lcd_str("   Smart Room   ");
   748  000E9A  0E11               	movlw	low STR_14
   749  000E9C  6E1E               	movwf	lcd_str@str^0,c
   750  000E9E  0E06               	movlw	high STR_14
   751  000EA0  6E1F               	movwf	(lcd_str@str+1)^0,c
   752  000EA2  ECE4  F009         	call	_lcd_str	;wreg free
   753                           
   754                           ;main.c: 165:     atraso_s(2);
   755  000EA6  0E00               	movlw	0
   756  000EA8  6E21               	movwf	(atraso_s@t+1)^0,c
   757  000EAA  0E02               	movlw	2
   758  000EAC  6E20               	movwf	atraso_s@t^0,c
   759  000EAE  ECCE  F007         	call	_atraso_s	;wreg free
   760  000EB2                     
   761                           ;main.c: 166:     lcdCommand(0xD0);
   762  000EB2  0ED0               	movlw	208
   763  000EB4  EC8F  F007         	call	_lcdCommand
   764  000EB8                     
   765                           ;main.c: 167:     lcd_str("by: Orlando Beco");
   766  000EB8  0E33               	movlw	low STR_15
   767  000EBA  6E1E               	movwf	lcd_str@str^0,c
   768  000EBC  0E06               	movlw	high STR_15
   769  000EBE  6E1F               	movwf	(lcd_str@str+1)^0,c
   770  000EC0  ECE4  F009         	call	_lcd_str	;wreg free
   771  000EC4                     
   772                           ;main.c: 168:     atraso_s(3);
   773  000EC4  0E00               	movlw	0
   774  000EC6  6E21               	movwf	(atraso_s@t+1)^0,c
   775  000EC8  0E03               	movlw	3
   776  000ECA  6E20               	movwf	atraso_s@t^0,c
   777  000ECC  ECCE  F007         	call	_atraso_s	;wreg free
   778  000ED0                     
   779                           ;main.c: 169:     lcdPrint();
   780  000ED0  EC94  F009         	call	_lcdPrint	;wreg free
   781                           
   782                           ;main.c: 170:     lcdCommand(0x80 + 10);
   783  000ED4  0E8A               	movlw	138
   784  000ED6  EC8F  F007         	call	_lcdCommand
   785  000EDA                     
   786                           ;main.c: 171:     lcd_str("OFF");
   787  000EDA  0E92               	movlw	low STR_16
   788  000EDC  6E1E               	movwf	lcd_str@str^0,c
   789  000EDE  0E06               	movlw	high STR_16
   790  000EE0  6E1F               	movwf	(lcd_str@str+1)^0,c
   791  000EE2  ECE4  F009         	call	_lcd_str	;wreg free
   792  000EE6                     
   793                           ;main.c: 172:     lcdCommand(0xC0 + 10);
   794  000EE6  0ECA               	movlw	202
   795  000EE8  EC8F  F007         	call	_lcdCommand
   796                           
   797                           ;main.c: 173:     lcd_str("OFF");
   798  000EEC  0E92               	movlw	low STR_16
   799  000EEE  6E1E               	movwf	lcd_str@str^0,c
   800  000EF0  0E06               	movlw	high STR_16
   801  000EF2  6E1F               	movwf	(lcd_str@str+1)^0,c
   802  000EF4  ECE4  F009         	call	_lcd_str	;wreg free
   803  000EF8                     
   804                           ;main.c: 174:     lcdCommand(0x90 + 10);
   805  000EF8  0E9A               	movlw	154
   806  000EFA  EC8F  F007         	call	_lcdCommand
   807  000EFE                     
   808                           ;main.c: 175:     lcd_str("OPEN");
   809  000EFE  0E8D               	movlw	low STR_18
   810  000F00  6E1E               	movwf	lcd_str@str^0,c
   811  000F02  0E06               	movlw	high STR_18
   812  000F04  6E1F               	movwf	(lcd_str@str+1)^0,c
   813  000F06  ECE4  F009         	call	_lcd_str	;wreg free
   814                           
   815                           ;main.c: 176:     lcdCommand(0xD0 + 10);
   816  000F0A  0EDA               	movlw	218
   817  000F0C  EC8F  F007         	call	_lcdCommand
   818  000F10                     
   819                           ;main.c: 177:     lcd_str("OFF");
   820  000F10  0E92               	movlw	low STR_16
   821  000F12  6E1E               	movwf	lcd_str@str^0,c
   822  000F14  0E06               	movlw	high STR_16
   823  000F16  6E1F               	movwf	(lcd_str@str+1)^0,c
   824  000F18  ECE4  F009         	call	_lcd_str	;wreg free
   825  000F1C  0012               	return		;funcret
   826  000F1E                     __end_of_lcdPrintInicio:
   827                           	callstack 0
   828                           
   829 ;; *************** function _lcdPrint *****************
   830 ;; Defined at:
   831 ;;		line 144 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   845 ;;      Params:         0       0       0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0       0       0
   848 ;;      Totals:         0       0       0       0       0       0       0
   849 ;;Total ram usage:        0 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 3
   852 ;; This function calls:
   853 ;;		_lcdCommand
   854 ;;		_lcd_str
   855 ;; This function is called by:
   856 ;;		_lcdPrintInicio
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text3
   861  001328                     __ptext3:
   862                           	callstack 0
   863  001328                     _lcdPrint:
   864                           	callstack 26
   865  001328                     
   866                           ;main.c: 145:     lcdCommand(0x01);
   867  001328  0E01               	movlw	1
   868  00132A  EC8F  F007         	call	_lcdCommand
   869                           
   870                           ;main.c: 146:     lcdCommand(0x80);
   871  00132E  0E80               	movlw	128
   872  001330  EC8F  F007         	call	_lcdCommand
   873  001334                     
   874                           ;main.c: 147:     lcd_str("3-Luz:");
   875  001334  0E7C               	movlw	low STR_9
   876  001336  6E1E               	movwf	lcd_str@str^0,c
   877  001338  0E06               	movlw	high STR_9
   878  00133A  6E1F               	movwf	(lcd_str@str+1)^0,c
   879  00133C  ECE4  F009         	call	_lcd_str	;wreg free
   880  001340                     
   881                           ;main.c: 148:     lcdCommand(0xC0);
   882  001340  0EC0               	movlw	192
   883  001342  EC8F  F007         	call	_lcdCommand
   884                           
   885                           ;main.c: 149:     lcd_str("6-Vent:");
   886  001346  0E66               	movlw	low STR_10
   887  001348  6E1E               	movwf	lcd_str@str^0,c
   888  00134A  0E06               	movlw	high STR_10
   889  00134C  6E1F               	movwf	(lcd_str@str+1)^0,c
   890  00134E  ECE4  F009         	call	_lcd_str	;wreg free
   891  001352                     
   892                           ;main.c: 150:     lcdCommand(0x90);
   893  001352  0E90               	movlw	144
   894  001354  EC8F  F007         	call	_lcdCommand
   895  001358                     
   896                           ;main.c: 151:     lcd_str("9-Porta:");
   897  001358  0E44               	movlw	low STR_11
   898  00135A  6E1E               	movwf	lcd_str@str^0,c
   899  00135C  0E06               	movlw	high STR_11
   900  00135E  6E1F               	movwf	(lcd_str@str+1)^0,c
   901  001360  ECE4  F009         	call	_lcd_str	;wreg free
   902                           
   903                           ;main.c: 152:     lcdCommand(0xD0);
   904  001364  0ED0               	movlw	208
   905  001366  EC8F  F007         	call	_lcdCommand
   906  00136A                     
   907                           ;main.c: 153:     lcd_str("#-Aquec:");
   908  00136A  0E4D               	movlw	low STR_12
   909  00136C  6E1E               	movwf	lcd_str@str^0,c
   910  00136E  0E06               	movlw	high STR_12
   911  001370  6E1F               	movwf	(lcd_str@str+1)^0,c
   912  001372  ECE4  F009         	call	_lcd_str	;wreg free
   913  001376  0012               	return		;funcret
   914  001378                     __end_of_lcdPrint:
   915                           	callstack 0
   916                           
   917 ;; *************** function _atraso_s *****************
   918 ;; Defined at:
   919 ;;		line 14 in file "delay.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  t               2   10[COMRAM] unsigned int 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  i               2   12[COMRAM] volatile unsigned int 
   924 ;;  k               1   15[COMRAM] volatile unsigned char 
   925 ;;  j               1   14[COMRAM] volatile unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   935 ;;      Params:         2       0       0       0       0       0       0
   936 ;;      Locals:         4       0       0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0
   938 ;;      Totals:         6       0       0       0       0       0       0
   939 ;;Total ram usage:        6 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; Hardware stack levels required when called: 1
   942 ;; This function calls:
   943 ;;		___wmul
   944 ;; This function is called by:
   945 ;;		_lcdPrintInicio
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text4
   950  000F9C                     __ptext4:
   951                           	callstack 0
   952  000F9C                     _atraso_s:
   953                           	callstack 28
   954  000F9C                     
   955                           ;delay.c: 15:     volatile unsigned char j, k;;delay.c: 16:     volatile unsigned int i;
      +                          ;delay.c: 17:     for (i = 0; i < (t * 1000); i++) {
   956  000F9C  0E00               	movlw	0
   957  000F9E  6E23               	movwf	(atraso_s@i+1)^0,c	;volatile
   958  000FA0  0E00               	movlw	0
   959  000FA2  6E22               	movwf	atraso_s@i^0,c	;volatile
   960  000FA4  EFF4  F007         	goto	l1940
   961  000FA8                     l1918:
   962                           
   963                           ;delay.c: 18:         for (j = 0; j < 41; j++) {
   964  000FA8  0E00               	movlw	0
   965  000FAA  6E24               	movwf	atraso_s@j^0,c	;volatile
   966  000FAC                     l1920:
   967  000FAC  0E28               	movlw	40
   968  000FAE  6424               	cpfsgt	atraso_s@j^0,c	;volatile
   969  000FB0  EFDC  F007         	goto	u1321
   970  000FB4  EFDE  F007         	goto	u1320
   971  000FB8                     u1321:
   972  000FB8  EFE0  F007         	goto	l1924
   973  000FBC                     u1320:
   974  000FBC  EFF2  F007         	goto	l1938
   975  000FC0                     l1924:
   976                           
   977                           ;delay.c: 19:             for (k = 0; k < 3; k++);
   978  000FC0  0E00               	movlw	0
   979  000FC2  6E25               	movwf	atraso_s@k^0,c	;volatile
   980  000FC4                     l1926:
   981  000FC4  0E02               	movlw	2
   982  000FC6  6425               	cpfsgt	atraso_s@k^0,c	;volatile
   983  000FC8  EFE8  F007         	goto	u1331
   984  000FCC  EFEA  F007         	goto	u1330
   985  000FD0                     u1331:
   986  000FD0  EFEC  F007         	goto	l1930
   987  000FD4                     u1330:
   988  000FD4  EFEF  F007         	goto	l1934
   989  000FD8                     l1930:
   990  000FD8  2A25               	incf	atraso_s@k^0,f,c	;volatile
   991  000FDA  EFE2  F007         	goto	l1926
   992  000FDE                     l1934:
   993                           
   994                           ;delay.c: 20:         }
   995  000FDE  2A24               	incf	atraso_s@j^0,f,c	;volatile
   996  000FE0  EFD6  F007         	goto	l1920
   997  000FE4                     l1938:
   998                           
   999                           ;delay.c: 21:     }
  1000  000FE4  4A22               	infsnz	atraso_s@i^0,f,c	;volatile
  1001  000FE6  2A23               	incf	(atraso_s@i+1)^0,f,c	;volatile
  1002  000FE8                     l1940:
  1003  000FE8  C020  F01A         	movff	atraso_s@t,___wmul@multiplier
  1004  000FEC  C021  F01B         	movff	atraso_s@t+1,___wmul@multiplier+1
  1005  000FF0  0E03               	movlw	3
  1006  000FF2  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  1007  000FF4  0EE8               	movlw	232
  1008  000FF6  6E1C               	movwf	___wmul@multiplicand^0,c
  1009  000FF8  EC72  F00A         	call	___wmul	;wreg free
  1010  000FFC  501A               	movf	?___wmul^0,w,c
  1011  000FFE  5C22               	subwf	atraso_s@i^0,w,c	;volatile
  1012  001000  501B               	movf	(?___wmul+1)^0,w,c
  1013  001002  5823               	subwfb	(atraso_s@i+1)^0,w,c	;volatile
  1014  001004  A0D8               	btfss	status,0,c
  1015  001006  EF07  F008         	goto	u1341
  1016  00100A  EF09  F008         	goto	u1340
  1017  00100E                     u1341:
  1018  00100E  EFD4  F007         	goto	l1918
  1019  001012                     u1340:
  1020  001012  0012               	return		;funcret
  1021  001014                     __end_of_atraso_s:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _lcdInit *****************
  1025 ;; Defined at:
  1026 ;;		line 95 in file "lcd.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1040 ;;      Params:         0       0       0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 3
  1047 ;; This function calls:
  1048 ;;		_Delay2ms
  1049 ;;		_lcdCommand
  1050 ;;		_pinMode
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text5
  1057  001014                     __ptext5:
  1058                           	callstack 0
  1059  001014                     _lcdInit:
  1060                           	callstack 27
  1061  001014                     
  1062                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  1063  001014  0E00               	movlw	0
  1064  001016  6E17               	movwf	(pinMode@pin+1)^0,c
  1065  001018  0E22               	movlw	34
  1066  00101A  6E16               	movwf	pinMode@pin^0,c
  1067  00101C  0E00               	movlw	0
  1068  00101E  6E19               	movwf	(pinMode@type+1)^0,c
  1069  001020  0E00               	movlw	0
  1070  001022  6E18               	movwf	pinMode@type^0,c
  1071  001024  EC73  F004         	call	_pinMode	;wreg free
  1072                           
  1073                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  1074  001028  0E00               	movlw	0
  1075  00102A  6E17               	movwf	(pinMode@pin+1)^0,c
  1076  00102C  0E21               	movlw	33
  1077  00102E  6E16               	movwf	pinMode@pin^0,c
  1078  001030  0E00               	movlw	0
  1079  001032  6E19               	movwf	(pinMode@type+1)^0,c
  1080  001034  0E00               	movlw	0
  1081  001036  6E18               	movwf	pinMode@type^0,c
  1082  001038  EC73  F004         	call	_pinMode	;wreg free
  1083  00103C                     
  1084                           ;lcd.c: 99:  TRISD = 0x00;
  1085  00103C  0E00               	movlw	0
  1086  00103E  6E95               	movwf	149,c	;volatile
  1087  001040                     
  1088                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  1089  001040  EC85  F00A         	call	_Delay2ms	;wreg free
  1090  001044  EC85  F00A         	call	_Delay2ms	;wreg free
  1091  001048  EC85  F00A         	call	_Delay2ms	;wreg free
  1092  00104C  EC85  F00A         	call	_Delay2ms	;wreg free
  1093  001050  EC85  F00A         	call	_Delay2ms	;wreg free
  1094  001054                     
  1095                           ;lcd.c: 104:     lcdCommand(0x38);
  1096  001054  0E38               	movlw	56
  1097  001056  EC8F  F007         	call	_lcdCommand
  1098  00105A                     
  1099                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  1100  00105A  EC85  F00A         	call	_Delay2ms	;wreg free
  1101  00105E  EC85  F00A         	call	_Delay2ms	;wreg free
  1102  001062                     
  1103                           ;lcd.c: 106:     lcdCommand(0x38);
  1104  001062  0E38               	movlw	56
  1105  001064  EC8F  F007         	call	_lcdCommand
  1106  001068                     
  1107                           ;lcd.c: 107:     Delay2ms();
  1108  001068  EC85  F00A         	call	_Delay2ms	;wreg free
  1109  00106C                     
  1110                           ;lcd.c: 108:     lcdCommand(0x38);
  1111  00106C  0E38               	movlw	56
  1112  00106E  EC8F  F007         	call	_lcdCommand
  1113  001072                     
  1114                           ;lcd.c: 110:     lcdCommand(0x38);
  1115  001072  0E38               	movlw	56
  1116  001074  EC8F  F007         	call	_lcdCommand
  1117  001078                     
  1118                           ;lcd.c: 111:     lcdCommand(0x06);
  1119  001078  0E06               	movlw	6
  1120  00107A  EC8F  F007         	call	_lcdCommand
  1121  00107E                     
  1122                           ;lcd.c: 114:     lcdCommand(0x0C);
  1123  00107E  0E0C               	movlw	12
  1124  001080  EC8F  F007         	call	_lcdCommand
  1125  001084                     
  1126                           ;lcd.c: 115:     lcdCommand(0x01);
  1127  001084  0E01               	movlw	1
  1128  001086  EC8F  F007         	call	_lcdCommand
  1129  00108A  0012               	return		;funcret
  1130  00108C                     __end_of_lcdInit:
  1131                           	callstack 0
  1132                           
  1133 ;; *************** function _kpInit *****************
  1134 ;; Defined at:
  1135 ;;		line 91 in file "keypad.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1149 ;;      Params:         0       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text6
  1163  001568                     __ptext6:
  1164                           	callstack 0
  1165  001568                     _kpInit:
  1166                           	callstack 30
  1167  001568                     
  1168                           ;keypad.c: 93:     TRISB &= 0x07;
  1169  001568  0E07               	movlw	7
  1170  00156A  1693               	andwf	147,f,c	;volatile
  1171                           
  1172                           ;keypad.c: 95:     TRISD |= 0x0f;
  1173  00156C  0E0F               	movlw	15
  1174  00156E  1295               	iorwf	149,f,c	;volatile
  1175  001570  0012               	return		;funcret
  1176  001572                     __end_of_kpInit:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _escolheOpcoes *****************
  1180 ;; Defined at:
  1181 ;;		line 55 in file "main.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  aux             2   16[COMRAM] int 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1195 ;;      Params:         0       0       0       0       0       0       0
  1196 ;;      Locals:         2       0       0       0       0       0       0
  1197 ;;      Temps:          3       0       0       0       0       0       0
  1198 ;;      Totals:         5       0       0       0       0       0       0
  1199 ;;Total ram usage:        5 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 4
  1202 ;; This function calls:
  1203 ;;		_aquec
  1204 ;;		_kpDebounce
  1205 ;;		_kpRead
  1206 ;;		_luz
  1207 ;;		_porta
  1208 ;;		_vent
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text7
  1215  000CB2                     __ptext7:
  1216                           	callstack 0
  1217  000CB2                     _escolheOpcoes:
  1218                           	callstack 26
  1219  000CB2                     
  1220                           ;main.c: 56:     kpDebounce();
  1221  000CB2  EC9A  F005         	call	_kpDebounce	;wreg free
  1222  000CB6                     
  1223                           ;main.c: 57:     if (kpRead() != tecla) {
  1224  000CB6  ECB9  F00A         	call	_kpRead	;wreg free
  1225  000CBA  5028               	movf	_tecla^0,w,c
  1226  000CBC  1816               	xorwf	?_kpRead^0,w,c
  1227  000CBE  E109               	bnz	u1610
  1228  000CC0  5029               	movf	(_tecla+1)^0,w,c
  1229  000CC2  1817               	xorwf	(?_kpRead+1)^0,w,c
  1230  000CC4  B4D8               	btfsc	status,2,c
  1231  000CC6  EF67  F006         	goto	u1611
  1232  000CCA  EF69  F006         	goto	u1610
  1233  000CCE                     u1611:
  1234  000CCE  EFCF  F006         	goto	l84
  1235  000CD2                     u1610:
  1236  000CD2                     
  1237                           ;main.c: 58:         tecla = kpRead();
  1238  000CD2  ECB9  F00A         	call	_kpRead	;wreg free
  1239  000CD6  C016  F028         	movff	?_kpRead,_tecla
  1240  000CDA  C017  F029         	movff	?_kpRead+1,_tecla+1
  1241  000CDE                     
  1242                           ;main.c: 59:         for (int aux = 0; aux < 12; aux++) {
  1243  000CDE  0E00               	movlw	0
  1244  000CE0  6E27               	movwf	(escolheOpcoes@aux+1)^0,c
  1245  000CE2  0E00               	movlw	0
  1246  000CE4  6E26               	movwf	escolheOpcoes@aux^0,c
  1247  000CE6                     l2106:
  1248                           
  1249                           ;main.c: 60:             if (((tecla) & (1<<(aux)))) {
  1250  000CE6  C026  F023         	movff	escolheOpcoes@aux,??_escolheOpcoes
  1251  000CEA  0E01               	movlw	1
  1252  000CEC  6E24               	movwf	(??_escolheOpcoes+1)^0,c
  1253  000CEE  0E00               	movlw	0
  1254  000CF0  6E25               	movwf	(??_escolheOpcoes+2)^0,c
  1255  000CF2  2A23               	incf	??_escolheOpcoes^0,f,c
  1256  000CF4  EF7F  F006         	goto	u1624
  1257  000CF8                     u1625:
  1258  000CF8  90D8               	bcf	status,0,c
  1259  000CFA  3624               	rlcf	(??_escolheOpcoes+1)^0,f,c
  1260  000CFC  3625               	rlcf	(??_escolheOpcoes+2)^0,f,c
  1261  000CFE                     u1624:
  1262  000CFE  2E23               	decfsz	??_escolheOpcoes^0,f,c
  1263  000D00  EF7C  F006         	goto	u1625
  1264  000D04  5028               	movf	_tecla^0,w,c
  1265  000D06  1624               	andwf	(??_escolheOpcoes+1)^0,f,c
  1266  000D08  5029               	movf	(_tecla+1)^0,w,c
  1267  000D0A  1625               	andwf	(??_escolheOpcoes+2)^0,f,c
  1268  000D0C  5024               	movf	(??_escolheOpcoes+1)^0,w,c
  1269  000D0E  1025               	iorwf	(??_escolheOpcoes+2)^0,w,c
  1270  000D10  B4D8               	btfsc	status,2,c
  1271  000D12  EF8D  F006         	goto	u1631
  1272  000D16  EF8F  F006         	goto	u1630
  1273  000D1A                     u1631:
  1274  000D1A  EFBF  F006         	goto	l2124
  1275  000D1E                     u1630:
  1276  000D1E                     
  1277                           ;main.c: 61:                 if (aux == 11) {
  1278  000D1E  0E0B               	movlw	11
  1279  000D20  1826               	xorwf	escolheOpcoes@aux^0,w,c
  1280  000D22  1027               	iorwf	(escolheOpcoes@aux+1)^0,w,c
  1281  000D24  A4D8               	btfss	status,2,c
  1282  000D26  EF97  F006         	goto	u1641
  1283  000D2A  EF99  F006         	goto	u1640
  1284  000D2E                     u1641:
  1285  000D2E  EF9B  F006         	goto	l2112
  1286  000D32                     u1640:
  1287  000D32                     
  1288                           ;main.c: 62:                     luz();
  1289  000D32  EC40  F009         	call	_luz	;wreg free
  1290  000D36                     l2112:
  1291                           
  1292                           ;main.c: 64:                 if (aux == 10) {
  1293  000D36  0E0A               	movlw	10
  1294  000D38  1826               	xorwf	escolheOpcoes@aux^0,w,c
  1295  000D3A  1027               	iorwf	(escolheOpcoes@aux+1)^0,w,c
  1296  000D3C  A4D8               	btfss	status,2,c
  1297  000D3E  EFA3  F006         	goto	u1651
  1298  000D42  EFA5  F006         	goto	u1650
  1299  000D46                     u1651:
  1300  000D46  EFA7  F006         	goto	l2116
  1301  000D4A                     u1650:
  1302  000D4A                     
  1303                           ;main.c: 65:                     vent();
  1304  000D4A  EC34  F00A         	call	_vent	;wreg free
  1305  000D4E                     l2116:
  1306                           
  1307                           ;main.c: 67:                 if (aux == 9) {
  1308  000D4E  0E09               	movlw	9
  1309  000D50  1826               	xorwf	escolheOpcoes@aux^0,w,c
  1310  000D52  1027               	iorwf	(escolheOpcoes@aux+1)^0,w,c
  1311  000D54  A4D8               	btfss	status,2,c
  1312  000D56  EFAF  F006         	goto	u1661
  1313  000D5A  EFB1  F006         	goto	u1660
  1314  000D5E                     u1661:
  1315  000D5E  EFB3  F006         	goto	l2120
  1316  000D62                     u1660:
  1317  000D62                     
  1318                           ;main.c: 68:                     porta();
  1319  000D62  EC16  F009         	call	_porta	;wreg free
  1320  000D66                     l2120:
  1321                           
  1322                           ;main.c: 70:                 if (aux == 8) {
  1323  000D66  0E08               	movlw	8
  1324  000D68  1826               	xorwf	escolheOpcoes@aux^0,w,c
  1325  000D6A  1027               	iorwf	(escolheOpcoes@aux+1)^0,w,c
  1326  000D6C  A4D8               	btfss	status,2,c
  1327  000D6E  EFBB  F006         	goto	u1671
  1328  000D72  EFBD  F006         	goto	u1670
  1329  000D76                     u1671:
  1330  000D76  EFBF  F006         	goto	l2124
  1331  000D7A                     u1670:
  1332  000D7A                     
  1333                           ;main.c: 71:                     aquec();
  1334  000D7A  ECBC  F009         	call	_aquec	;wreg free
  1335  000D7E                     l2124:
  1336                           
  1337                           ;main.c: 74:         }
  1338  000D7E  4A26               	infsnz	escolheOpcoes@aux^0,f,c
  1339  000D80  2A27               	incf	(escolheOpcoes@aux+1)^0,f,c
  1340  000D82  BE27               	btfsc	(escolheOpcoes@aux+1)^0,7,c
  1341  000D84  EFCD  F006         	goto	u1681
  1342  000D88  5027               	movf	(escolheOpcoes@aux+1)^0,w,c
  1343  000D8A  E109               	bnz	u1680
  1344  000D8C  0E0C               	movlw	12
  1345  000D8E  5C26               	subwf	escolheOpcoes@aux^0,w,c
  1346  000D90  A0D8               	btfss	status,0,c
  1347  000D92  EFCD  F006         	goto	u1681
  1348  000D96  EFCF  F006         	goto	u1680
  1349  000D9A                     u1681:
  1350  000D9A  EF73  F006         	goto	l2106
  1351  000D9E                     u1680:
  1352  000D9E                     l84:
  1353  000D9E  0012               	return		;funcret
  1354  000DA0                     __end_of_escolheOpcoes:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _vent *****************
  1358 ;; Defined at:
  1359 ;;		line 93 in file "main.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1373 ;;      Params:         0       0       0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0
  1376 ;;      Totals:         0       0       0       0       0       0       0
  1377 ;;Total ram usage:        0 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 3
  1380 ;; This function calls:
  1381 ;;		_lcdCommand
  1382 ;;		_lcd_str
  1383 ;; This function is called by:
  1384 ;;		_escolheOpcoes
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text8
  1389  001468                     __ptext8:
  1390                           	callstack 0
  1391  001468                     _vent:
  1392                           	callstack 26
  1393  001468                     
  1394                           ;main.c: 94:     if (estadoVent == 1) {
  1395  001468  040B               	decf	_estadoVent^0,w,c
  1396  00146A  100C               	iorwf	(_estadoVent+1)^0,w,c
  1397  00146C  A4D8               	btfss	status,2,c
  1398  00146E  EF3B  F00A         	goto	u1271
  1399  001472  EF3D  F00A         	goto	u1270
  1400  001476                     u1271:
  1401  001476  EF4C  F00A         	goto	l1834
  1402  00147A                     u1270:
  1403  00147A                     
  1404                           ;main.c: 95:         estadoVent = 0;
  1405  00147A  0E00               	movlw	0
  1406  00147C  6E0C               	movwf	(_estadoVent+1)^0,c
  1407  00147E  0E00               	movlw	0
  1408  001480  6E0B               	movwf	_estadoVent^0,c
  1409  001482                     
  1410                           ;main.c: 96:         lcdCommand(0xC0 + 10);
  1411  001482  0ECA               	movlw	202
  1412  001484  EC8F  F007         	call	_lcdCommand
  1413  001488                     
  1414                           ;main.c: 97:         lcd_str("OFF   ");
  1415  001488  0E75               	movlw	low STR_1
  1416  00148A  6E1E               	movwf	lcd_str@str^0,c
  1417  00148C  0E06               	movlw	high STR_1
  1418  00148E  6E1F               	movwf	(lcd_str@str+1)^0,c
  1419  001490  ECE4  F009         	call	_lcd_str	;wreg free
  1420                           
  1421                           ;main.c: 98:     } else {
  1422  001494  EF59  F00A         	goto	l94
  1423  001498                     l1834:
  1424                           
  1425                           ;main.c: 99:         estadoVent = 1;
  1426  001498  0E00               	movlw	0
  1427  00149A  6E0C               	movwf	(_estadoVent+1)^0,c
  1428  00149C  0E01               	movlw	1
  1429  00149E  6E0B               	movwf	_estadoVent^0,c
  1430  0014A0                     
  1431                           ;main.c: 100:         lcdCommand(0xC0 + 10);
  1432  0014A0  0ECA               	movlw	202
  1433  0014A2  EC8F  F007         	call	_lcdCommand
  1434  0014A6                     
  1435                           ;main.c: 101:         lcd_str("ON  ");
  1436  0014A6  0E83               	movlw	low STR_4
  1437  0014A8  6E1E               	movwf	lcd_str@str^0,c
  1438  0014AA  0E06               	movlw	high STR_4
  1439  0014AC  6E1F               	movwf	(lcd_str@str+1)^0,c
  1440  0014AE  ECE4  F009         	call	_lcd_str	;wreg free
  1441  0014B2                     l94:
  1442  0014B2  0012               	return		;funcret
  1443  0014B4                     __end_of_vent:
  1444                           	callstack 0
  1445                           
  1446 ;; *************** function _porta *****************
  1447 ;; Defined at:
  1448 ;;		line 114 in file "main.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1462 ;;      Params:         0       0       0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0
  1465 ;;      Totals:         0       0       0       0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 3
  1469 ;; This function calls:
  1470 ;;		_lcdCommand
  1471 ;;		_lcd_str
  1472 ;; This function is called by:
  1473 ;;		_escolheOpcoes
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text9
  1478  00122C                     __ptext9:
  1479                           	callstack 0
  1480  00122C                     _porta:
  1481                           	callstack 26
  1482  00122C                     
  1483                           ;main.c: 115:     if (estadoPorta == 1) {
  1484  00122C  040D               	decf	_estadoPorta^0,w,c
  1485  00122E  100E               	iorwf	(_estadoPorta+1)^0,w,c
  1486  001230  A4D8               	btfss	status,2,c
  1487  001232  EF1D  F009         	goto	u1281
  1488  001236  EF1F  F009         	goto	u1280
  1489  00123A                     u1281:
  1490  00123A  EF30  F009         	goto	l1852
  1491  00123E                     u1280:
  1492  00123E                     
  1493                           ;main.c: 116:         estadoPorta = 0;
  1494  00123E  0E00               	movlw	0
  1495  001240  6E0E               	movwf	(_estadoPorta+1)^0,c
  1496  001242  0E00               	movlw	0
  1497  001244  6E0D               	movwf	_estadoPorta^0,c
  1498  001246                     
  1499                           ;main.c: 117:         PORTCbits.RC0 = 0;
  1500  001246  9082               	bcf	130,0,c	;volatile
  1501  001248                     
  1502                           ;main.c: 118:         PORTEbits.RE0 = 0;
  1503  001248  9084               	bcf	132,0,c	;volatile
  1504  00124A                     
  1505                           ;main.c: 119:         lcdCommand(0x90 + 10);
  1506  00124A  0E9A               	movlw	154
  1507  00124C  EC8F  F007         	call	_lcdCommand
  1508  001250                     
  1509                           ;main.c: 120:         lcd_str("OPEN   ");
  1510  001250  0E56               	movlw	low STR_5
  1511  001252  6E1E               	movwf	lcd_str@str^0,c
  1512  001254  0E06               	movlw	high STR_5
  1513  001256  6E1F               	movwf	(lcd_str@str+1)^0,c
  1514  001258  ECE4  F009         	call	_lcd_str	;wreg free
  1515                           
  1516                           ;main.c: 121:     } else {
  1517  00125C  EF3F  F009         	goto	l104
  1518  001260                     l1852:
  1519                           
  1520                           ;main.c: 122:         estadoPorta = 1;
  1521  001260  0E00               	movlw	0
  1522  001262  6E0E               	movwf	(_estadoPorta+1)^0,c
  1523  001264  0E01               	movlw	1
  1524  001266  6E0D               	movwf	_estadoPorta^0,c
  1525  001268                     
  1526                           ;main.c: 123:         PORTCbits.RC0 = 1;
  1527  001268  8082               	bsf	130,0,c	;volatile
  1528  00126A                     
  1529                           ;main.c: 124:         PORTEbits.RE0 = 1;
  1530  00126A  8084               	bsf	132,0,c	;volatile
  1531  00126C                     
  1532                           ;main.c: 125:         lcdCommand(0x90 + 10);
  1533  00126C  0E9A               	movlw	154
  1534  00126E  EC8F  F007         	call	_lcdCommand
  1535  001272                     
  1536                           ;main.c: 126:         lcd_str("CLOSED ");
  1537  001272  0E5E               	movlw	low STR_6
  1538  001274  6E1E               	movwf	lcd_str@str^0,c
  1539  001276  0E06               	movlw	high STR_6
  1540  001278  6E1F               	movwf	(lcd_str@str+1)^0,c
  1541  00127A  ECE4  F009         	call	_lcd_str	;wreg free
  1542  00127E                     l104:
  1543  00127E  0012               	return		;funcret
  1544  001280                     __end_of_porta:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _luz *****************
  1548 ;; Defined at:
  1549 ;;		line 78 in file "main.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1563 ;;      Params:         0       0       0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 3
  1570 ;; This function calls:
  1571 ;;		_lcdCommand
  1572 ;;		_lcd_str
  1573 ;; This function is called by:
  1574 ;;		_escolheOpcoes
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text10
  1579  001280                     __ptext10:
  1580                           	callstack 0
  1581  001280                     _luz:
  1582                           	callstack 26
  1583  001280                     
  1584                           ;main.c: 79:     if (estadoLuz == 1) {
  1585  001280  0409               	decf	_estadoLuz^0,w,c
  1586  001282  100A               	iorwf	(_estadoLuz+1)^0,w,c
  1587  001284  A4D8               	btfss	status,2,c
  1588  001286  EF47  F009         	goto	u1261
  1589  00128A  EF49  F009         	goto	u1260
  1590  00128E                     u1261:
  1591  00128E  EF5A  F009         	goto	l1820
  1592  001292                     u1260:
  1593  001292                     
  1594                           ;main.c: 80:         estadoLuz = 0;
  1595  001292  0E00               	movlw	0
  1596  001294  6E0A               	movwf	(_estadoLuz+1)^0,c
  1597  001296  0E00               	movlw	0
  1598  001298  6E09               	movwf	_estadoLuz^0,c
  1599                           
  1600                           ;main.c: 81:         PORTB = 0x00;
  1601  00129A  0E00               	movlw	0
  1602  00129C  6E81               	movwf	129,c	;volatile
  1603  00129E                     
  1604                           ;main.c: 82:         lcdCommand(0x80 + 10);
  1605  00129E  0E8A               	movlw	138
  1606  0012A0  EC8F  F007         	call	_lcdCommand
  1607  0012A4                     
  1608                           ;main.c: 83:         lcd_str("OFF   ");
  1609  0012A4  0E75               	movlw	low STR_1
  1610  0012A6  6E1E               	movwf	lcd_str@str^0,c
  1611  0012A8  0E06               	movlw	high STR_1
  1612  0012AA  6E1F               	movwf	(lcd_str@str+1)^0,c
  1613  0012AC  ECE4  F009         	call	_lcd_str	;wreg free
  1614                           
  1615                           ;main.c: 84:     } else {
  1616  0012B0  EF69  F009         	goto	l89
  1617  0012B4                     l1820:
  1618                           
  1619                           ;main.c: 85:         estadoLuz = 1;
  1620  0012B4  0E00               	movlw	0
  1621  0012B6  6E0A               	movwf	(_estadoLuz+1)^0,c
  1622  0012B8  0E01               	movlw	1
  1623  0012BA  6E09               	movwf	_estadoLuz^0,c
  1624                           
  1625                           ;main.c: 86:         PORTB = 0xF8;
  1626  0012BC  0EF8               	movlw	248
  1627  0012BE  6E81               	movwf	129,c	;volatile
  1628  0012C0                     
  1629                           ;main.c: 87:         lcdCommand(0x80 + 10);
  1630  0012C0  0E8A               	movlw	138
  1631  0012C2  EC8F  F007         	call	_lcdCommand
  1632  0012C6                     
  1633                           ;main.c: 88:         lcd_str("ON    ");
  1634  0012C6  0E6E               	movlw	low STR_2
  1635  0012C8  6E1E               	movwf	lcd_str@str^0,c
  1636  0012CA  0E06               	movlw	high STR_2
  1637  0012CC  6E1F               	movwf	(lcd_str@str+1)^0,c
  1638  0012CE  ECE4  F009         	call	_lcd_str	;wreg free
  1639  0012D2                     l89:
  1640  0012D2  0012               	return		;funcret
  1641  0012D4                     __end_of_luz:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _kpRead *****************
  1645 ;; Defined at:
  1646 ;;		line 35 in file "keypad.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  2    0[COMRAM] unsigned int 
  1653 ;; Registers used:
  1654 ;;		None
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1660 ;;      Params:         2       0       0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0
  1663 ;;      Totals:         2       0       0       0       0       0       0
  1664 ;;Total ram usage:        2 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_escolheOpcoes
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text11
  1674  001572                     __ptext11:
  1675                           	callstack 0
  1676  001572                     _kpRead:
  1677                           	callstack 29
  1678  001572                     
  1679                           ;keypad.c: 36:     return valor;
  1680  001572  C005  F016         	movff	_valor,?_kpRead
  1681  001576  C006  F017         	movff	_valor+1,?_kpRead+1
  1682  00157A  0012               	return		;funcret
  1683  00157C                     __end_of_kpRead:
  1684                           	callstack 0
  1685                           
  1686 ;; *************** function _kpDebounce *****************
  1687 ;; Defined at:
  1688 ;;		line 39 in file "keypad.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  k               2    6[COMRAM] int 
  1693 ;;  i               1    9[COMRAM] unsigned char 
  1694 ;;  j               1    8[COMRAM] unsigned char 
  1695 ;;  old_D           1    5[COMRAM] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0, prodl, prodh
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1705 ;;      Params:         0       0       0       0       0       0       0
  1706 ;;      Locals:         5       0       0       0       0       0       0
  1707 ;;      Temps:          5       0       0       0       0       0       0
  1708 ;;      Totals:        10       0       0       0       0       0       0
  1709 ;;Total ram usage:       10 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_escolheOpcoes
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text12
  1719  000B34                     __ptext12:
  1720                           	callstack 0
  1721  000B34                     _kpDebounce:
  1722                           	callstack 29
  1723  000B34                     
  1724                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 49:     unsigned char old_D;;keypad.c: 50:     old_
      +                          D = PORTD;
  1725  000B34  CF83 F01B          	movff	3971,kpDebounce@old_D	;volatile
  1726  000B38                     
  1727                           ;keypad.c: 51:     PORTD = 0x00;
  1728  000B38  0E00               	movlw	0
  1729  000B3A  6E83               	movwf	131,c	;volatile
  1730  000B3C                     
  1731                           ;keypad.c: 54:     TRISD |= 0x0f;
  1732  000B3C  0E0F               	movlw	15
  1733  000B3E  1295               	iorwf	149,f,c	;volatile
  1734  000B40                     
  1735                           ;keypad.c: 57:     for (i = 0; i < 3; i++) {
  1736  000B40  0E00               	movlw	0
  1737  000B42  6E1F               	movwf	kpDebounce@i^0,c
  1738  000B44                     l1170:
  1739                           
  1740                           ;keypad.c: 59:         TRISB &= 0xF8;
  1741  000B44  0EF8               	movlw	248
  1742  000B46  1693               	andwf	147,f,c	;volatile
  1743                           
  1744                           ;keypad.c: 61:         ((TRISB) |= (1<<(i)));
  1745  000B48  C01F  F016         	movff	kpDebounce@i,??_kpDebounce
  1746  000B4C  0E01               	movlw	1
  1747  000B4E  6E17               	movwf	(??_kpDebounce+1)^0,c
  1748  000B50  2A16               	incf	??_kpDebounce^0,f,c
  1749  000B52  EFAD  F005         	goto	u294
  1750  000B56                     u295:
  1751  000B56  90D8               	bcf	status,0,c
  1752  000B58  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  1753  000B5A                     u294:
  1754  000B5A  2E16               	decfsz	??_kpDebounce^0,f,c
  1755  000B5C  EFAB  F005         	goto	u295
  1756  000B60  5017               	movf	(??_kpDebounce+1)^0,w,c
  1757  000B62  1293               	iorwf	147,f,c	;volatile
  1758                           
  1759                           ;keypad.c: 63:         PORTB |= 0x07;
  1760  000B64  0E07               	movlw	7
  1761  000B66  1281               	iorwf	129,f,c	;volatile
  1762                           
  1763                           ;keypad.c: 64:         ((PORTB) &= ~(1<<(i)));
  1764  000B68  C01F  F016         	movff	kpDebounce@i,??_kpDebounce
  1765  000B6C  0E01               	movlw	1
  1766  000B6E  6E17               	movwf	(??_kpDebounce+1)^0,c
  1767  000B70  2A16               	incf	??_kpDebounce^0,f,c
  1768  000B72  EFBD  F005         	goto	u304
  1769  000B76                     u305:
  1770  000B76  90D8               	bcf	status,0,c
  1771  000B78  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  1772  000B7A                     u304:
  1773  000B7A  2E16               	decfsz	??_kpDebounce^0,f,c
  1774  000B7C  EFBB  F005         	goto	u305
  1775  000B80  5017               	movf	(??_kpDebounce+1)^0,w,c
  1776  000B82  0AFF               	xorlw	255
  1777  000B84  1681               	andwf	129,f,c	;volatile
  1778  000B86                     
  1779                           ;keypad.c: 67:         for (int k = 0; k < 10; k++);
  1780  000B86  0E00               	movlw	0
  1781  000B88  6E1D               	movwf	(kpDebounce@k+1)^0,c
  1782  000B8A  0E00               	movlw	0
  1783  000B8C  6E1C               	movwf	kpDebounce@k^0,c
  1784  000B8E                     l1178:
  1785  000B8E  4A1C               	infsnz	kpDebounce@k^0,f,c
  1786  000B90  2A1D               	incf	(kpDebounce@k+1)^0,f,c
  1787  000B92  BE1D               	btfsc	(kpDebounce@k+1)^0,7,c
  1788  000B94  EFD5  F005         	goto	u311
  1789  000B98  501D               	movf	(kpDebounce@k+1)^0,w,c
  1790  000B9A  E109               	bnz	u310
  1791  000B9C  0E0A               	movlw	10
  1792  000B9E  5C1C               	subwf	kpDebounce@k^0,w,c
  1793  000BA0  A0D8               	btfss	status,0,c
  1794  000BA2  EFD5  F005         	goto	u311
  1795  000BA6  EFD7  F005         	goto	u310
  1796  000BAA                     u311:
  1797  000BAA  EFC7  F005         	goto	l1178
  1798  000BAE                     u310:
  1799  000BAE                     
  1800                           ;keypad.c: 70:         for (j = 0; j < 4; j++) {
  1801  000BAE  0E00               	movlw	0
  1802  000BB0  6E1E               	movwf	kpDebounce@j^0,c
  1803  000BB2                     l1188:
  1804                           
  1805                           ;keypad.c: 71:             if (!((PORTD) & (1<<(j)))) {
  1806  000BB2  C01E  F016         	movff	kpDebounce@j,??_kpDebounce
  1807  000BB6  0E01               	movlw	1
  1808  000BB8  6E17               	movwf	(??_kpDebounce+1)^0,c
  1809  000BBA  2A16               	incf	??_kpDebounce^0,f,c
  1810  000BBC  EFE2  F005         	goto	u324
  1811  000BC0                     u325:
  1812  000BC0  90D8               	bcf	status,0,c
  1813  000BC2  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  1814  000BC4                     u324:
  1815  000BC4  2E16               	decfsz	??_kpDebounce^0,f,c
  1816  000BC6  EFE0  F005         	goto	u325
  1817  000BCA  5017               	movf	(??_kpDebounce+1)^0,w,c
  1818  000BCC  1483               	andwf	131,w,c	;volatile
  1819  000BCE  0900               	iorlw	0
  1820  000BD0  A4D8               	btfss	status,2,c
  1821  000BD2  EFED  F005         	goto	u331
  1822  000BD6  EFEF  F005         	goto	u330
  1823  000BDA                     u331:
  1824  000BDA  EF07  F006         	goto	l1192
  1825  000BDE                     u330:
  1826  000BDE                     
  1827                           ;keypad.c: 72:                 ((valorNovo) |= (1<<((i * 4) + j)));
  1828  000BDE  501F               	movf	kpDebounce@i^0,w,c
  1829  000BE0  0D04               	mullw	4
  1830  000BE2  50F3               	movf	243,w,c
  1831  000BE4  241E               	addwf	kpDebounce@j^0,w,c
  1832  000BE6  6E16               	movwf	??_kpDebounce^0,c
  1833  000BE8  0E01               	movlw	1
  1834  000BEA  6E17               	movwf	(??_kpDebounce+1)^0,c
  1835  000BEC  0E00               	movlw	0
  1836  000BEE  6E18               	movwf	(??_kpDebounce+2)^0,c
  1837  000BF0  2A16               	incf	??_kpDebounce^0,f,c
  1838  000BF2  EFFE  F005         	goto	u344
  1839  000BF6                     u345:
  1840  000BF6  90D8               	bcf	status,0,c
  1841  000BF8  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  1842  000BFA  3618               	rlcf	(??_kpDebounce+2)^0,f,c
  1843  000BFC                     u344:
  1844  000BFC  2E16               	decfsz	??_kpDebounce^0,f,c
  1845  000BFE  EFFB  F005         	goto	u345
  1846  000C02  5017               	movf	(??_kpDebounce+1)^0,w,c
  1847  000C04  1203               	iorwf	kpDebounce@valorNovo^0,f,c
  1848  000C06  5018               	movf	(??_kpDebounce+2)^0,w,c
  1849  000C08  1204               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  1850                           
  1851                           ;keypad.c: 73:             } else {
  1852  000C0A  EF21  F006         	goto	l1194
  1853  000C0E                     l1192:
  1854                           
  1855                           ;keypad.c: 74:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  1856  000C0E  501F               	movf	kpDebounce@i^0,w,c
  1857  000C10  0D04               	mullw	4
  1858  000C12  50F3               	movf	243,w,c
  1859  000C14  241E               	addwf	kpDebounce@j^0,w,c
  1860  000C16  6E16               	movwf	??_kpDebounce^0,c
  1861  000C18  0E01               	movlw	1
  1862  000C1A  6E17               	movwf	(??_kpDebounce+1)^0,c
  1863  000C1C  0E00               	movlw	0
  1864  000C1E  6E18               	movwf	(??_kpDebounce+2)^0,c
  1865  000C20  2A16               	incf	??_kpDebounce^0,f,c
  1866  000C22  EF16  F006         	goto	u354
  1867  000C26                     u355:
  1868  000C26  90D8               	bcf	status,0,c
  1869  000C28  3617               	rlcf	(??_kpDebounce+1)^0,f,c
  1870  000C2A  3618               	rlcf	(??_kpDebounce+2)^0,f,c
  1871  000C2C                     u354:
  1872  000C2C  2E16               	decfsz	??_kpDebounce^0,f,c
  1873  000C2E  EF13  F006         	goto	u355
  1874  000C32  1C17               	comf	(??_kpDebounce+1)^0,w,c
  1875  000C34  6E19               	movwf	(??_kpDebounce+3)^0,c
  1876  000C36  1C18               	comf	(??_kpDebounce+2)^0,w,c
  1877  000C38  6E1A               	movwf	(??_kpDebounce+4)^0,c
  1878  000C3A  5019               	movf	(??_kpDebounce+3)^0,w,c
  1879  000C3C  1603               	andwf	kpDebounce@valorNovo^0,f,c
  1880  000C3E  501A               	movf	(??_kpDebounce+4)^0,w,c
  1881  000C40  1604               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  1882  000C42                     l1194:
  1883                           
  1884                           ;keypad.c: 76:         }
  1885  000C42  2A1E               	incf	kpDebounce@j^0,f,c
  1886  000C44  0E03               	movlw	3
  1887  000C46  641E               	cpfsgt	kpDebounce@j^0,c
  1888  000C48  EF28  F006         	goto	u361
  1889  000C4C  EF2A  F006         	goto	u360
  1890  000C50                     u361:
  1891  000C50  EFD9  F005         	goto	l1188
  1892  000C54                     u360:
  1893  000C54                     
  1894                           ;keypad.c: 77:     }
  1895  000C54  2A1F               	incf	kpDebounce@i^0,f,c
  1896  000C56  0E02               	movlw	2
  1897  000C58  641F               	cpfsgt	kpDebounce@i^0,c
  1898  000C5A  EF31  F006         	goto	u371
  1899  000C5E  EF33  F006         	goto	u370
  1900  000C62                     u371:
  1901  000C62  EFA2  F005         	goto	l1170
  1902  000C66                     u370:
  1903  000C66                     
  1904                           ;keypad.c: 78:     if (valorAntigo == valorNovo) {
  1905  000C66  5003               	movf	kpDebounce@valorNovo^0,w,c
  1906  000C68  1801               	xorwf	kpDebounce@valorAntigo^0,w,c
  1907  000C6A  E107               	bnz	u381
  1908  000C6C  5004               	movf	(kpDebounce@valorNovo+1)^0,w,c
  1909  000C6E  1802               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  1910  000C70  A4D8               	btfss	status,2,c
  1911  000C72  EF3D  F006         	goto	u381
  1912  000C76  EF3F  F006         	goto	u380
  1913  000C7A                     u381:
  1914  000C7A  EF42  F006         	goto	l1206
  1915  000C7E                     u380:
  1916  000C7E                     
  1917                           ;keypad.c: 79:         tempo--;
  1918  000C7E  0614               	decf	kpDebounce@tempo^0,f,c
  1919                           
  1920                           ;keypad.c: 80:     } else {
  1921  000C80  EF48  F006         	goto	l274
  1922  000C84                     l1206:
  1923                           
  1924                           ;keypad.c: 81:         tempo = 10;
  1925  000C84  0E0A               	movlw	10
  1926  000C86  6E14               	movwf	kpDebounce@tempo^0,c
  1927  000C88                     
  1928                           ;keypad.c: 82:         valorAntigo = valorNovo;
  1929  000C88  C003  F001         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  1930  000C8C  C004  F002         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  1931  000C90                     l274:
  1932                           
  1933                           ;keypad.c: 84:     if (tempo == 0) {
  1934  000C90  5014               	movf	kpDebounce@tempo^0,w,c
  1935  000C92  A4D8               	btfss	status,2,c
  1936  000C94  EF4E  F006         	goto	u391
  1937  000C98  EF50  F006         	goto	u390
  1938  000C9C                     u391:
  1939  000C9C  EF54  F006         	goto	l275
  1940  000CA0                     u390:
  1941  000CA0                     
  1942                           ;keypad.c: 85:         valor = valorAntigo;
  1943  000CA0  C001  F005         	movff	kpDebounce@valorAntigo,_valor
  1944  000CA4  C002  F006         	movff	kpDebounce@valorAntigo+1,_valor+1
  1945  000CA8                     l275:
  1946                           
  1947                           ;keypad.c: 87:     PORTD = old_D;
  1948  000CA8  C01B  FF83         	movff	kpDebounce@old_D,3971	;volatile
  1949  000CAC                     
  1950                           ;keypad.c: 88:     TRISD = 0x00;
  1951  000CAC  0E00               	movlw	0
  1952  000CAE  6E95               	movwf	149,c	;volatile
  1953  000CB0  0012               	return		;funcret
  1954  000CB2                     __end_of_kpDebounce:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _aquec *****************
  1958 ;; Defined at:
  1959 ;;		line 130 in file "main.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1973 ;;      Params:         0       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 3
  1980 ;; This function calls:
  1981 ;;		_lcdCommand
  1982 ;;		_lcd_str
  1983 ;; This function is called by:
  1984 ;;		_escolheOpcoes
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text13
  1989  001378                     __ptext13:
  1990                           	callstack 0
  1991  001378                     _aquec:
  1992                           	callstack 26
  1993  001378                     
  1994                           ;main.c: 131:     if (estadoAquec == 1) {
  1995  001378  0407               	decf	_estadoAquec^0,w,c
  1996  00137A  1008               	iorwf	(_estadoAquec+1)^0,w,c
  1997  00137C  A4D8               	btfss	status,2,c
  1998  00137E  EFC3  F009         	goto	u1291
  1999  001382  EFC5  F009         	goto	u1290
  2000  001386                     u1291:
  2001  001386  EFD5  F009         	goto	l1872
  2002  00138A                     u1290:
  2003  00138A                     
  2004                           ;main.c: 132:         estadoAquec = 0;
  2005  00138A  0E00               	movlw	0
  2006  00138C  6E08               	movwf	(_estadoAquec+1)^0,c
  2007  00138E  0E00               	movlw	0
  2008  001390  6E07               	movwf	_estadoAquec^0,c
  2009  001392                     
  2010                           ;main.c: 133:         PORTCbits.RC5 = 0;
  2011  001392  9A82               	bcf	130,5,c	;volatile
  2012  001394                     
  2013                           ;main.c: 134:         lcdCommand(0xD0 + 10);
  2014  001394  0EDA               	movlw	218
  2015  001396  EC8F  F007         	call	_lcdCommand
  2016  00139A                     
  2017                           ;main.c: 135:         lcd_str("OFF ");
  2018  00139A  0E88               	movlw	low STR_7
  2019  00139C  6E1E               	movwf	lcd_str@str^0,c
  2020  00139E  0E06               	movlw	high STR_7
  2021  0013A0  6E1F               	movwf	(lcd_str@str+1)^0,c
  2022  0013A2  ECE4  F009         	call	_lcd_str	;wreg free
  2023                           
  2024                           ;main.c: 136:     } else {
  2025  0013A6  EFE3  F009         	goto	l109
  2026  0013AA                     l1872:
  2027                           
  2028                           ;main.c: 137:         estadoAquec = 1;
  2029  0013AA  0E00               	movlw	0
  2030  0013AC  6E08               	movwf	(_estadoAquec+1)^0,c
  2031  0013AE  0E01               	movlw	1
  2032  0013B0  6E07               	movwf	_estadoAquec^0,c
  2033  0013B2                     
  2034                           ;main.c: 138:         PORTCbits.RC5 = 1;
  2035  0013B2  8A82               	bsf	130,5,c	;volatile
  2036  0013B4                     
  2037                           ;main.c: 139:         lcdCommand(0xD0 + 10);
  2038  0013B4  0EDA               	movlw	218
  2039  0013B6  EC8F  F007         	call	_lcdCommand
  2040  0013BA                     
  2041                           ;main.c: 140:         lcd_str("ON  ");
  2042  0013BA  0E83               	movlw	low STR_4
  2043  0013BC  6E1E               	movwf	lcd_str@str^0,c
  2044  0013BE  0E06               	movlw	high STR_4
  2045  0013C0  6E1F               	movwf	(lcd_str@str+1)^0,c
  2046  0013C2  ECE4  F009         	call	_lcd_str	;wreg free
  2047  0013C6                     l109:
  2048  0013C6  0012               	return		;funcret
  2049  0013C8                     __end_of_aquec:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _lcd_str *****************
  2053 ;; Defined at:
  2054 ;;		line 118 in file "lcd.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2057 ;;		 -> STR_19(4), STR_18(5), STR_17(4), STR_16(4), 
  2058 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(9), 
  2059 ;;		 -> STR_11(9), STR_10(8), STR_9(7), STR_8(5), 
  2060 ;;		 -> STR_7(5), STR_6(8), STR_5(8), STR_4(5), 
  2061 ;;		 -> STR_3(7), STR_2(7), STR_1(7), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  i               1   12[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2073 ;;      Params:         2       0       0       0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0       0       0
  2075 ;;      Temps:          2       0       0       0       0       0       0
  2076 ;;      Totals:         5       0       0       0       0       0       0
  2077 ;;Total ram usage:        5 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 2
  2080 ;; This function calls:
  2081 ;;		_lcdData
  2082 ;; This function is called by:
  2083 ;;		_luz
  2084 ;;		_vent
  2085 ;;		_porta
  2086 ;;		_aquec
  2087 ;;		_lcdPrint
  2088 ;;		_lcdPrintInicio
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text14
  2093  0013C8                     __ptext14:
  2094                           	callstack 0
  2095  0013C8                     _lcd_str:
  2096                           	callstack 27
  2097  0013C8                     
  2098                           ;lcd.c: 119:     unsigned char i = 0;
  2099  0013C8  0E00               	movlw	0
  2100  0013CA  6E22               	movwf	lcd_str@i^0,c
  2101                           
  2102                           ;lcd.c: 121:     while (str[i] != 0) {
  2103  0013CC  EFF7  F009         	goto	l1780
  2104  0013D0                     l1776:
  2105                           
  2106                           ;lcd.c: 122:         lcdData(str[i]);
  2107  0013D0  5022               	movf	lcd_str@i^0,w,c
  2108  0013D2  241E               	addwf	lcd_str@str^0,w,c
  2109  0013D4  6E20               	movwf	??_lcd_str^0,c
  2110  0013D6  0E00               	movlw	0
  2111  0013D8  201F               	addwfc	(lcd_str@str+1)^0,w,c
  2112  0013DA  6E21               	movwf	(??_lcd_str+1)^0,c
  2113  0013DC  C020  FFF6         	movff	??_lcd_str,tblptrl
  2114  0013E0  C021  FFF7         	movff	??_lcd_str+1,tblptrh
  2115  0013E4                     	if	0	;tblptru may be non-zero
  2116  0013E4                     	endif
  2117  0013E4                     	if	0	;tblptru may be non-zero
  2118  0013E4                     	endif
  2119  0013E4  0008               	tblrd		*
  2120  0013E6  50F5               	movf	tablat,w,c
  2121  0013E8  EC6A  F009         	call	_lcdData
  2122  0013EC                     
  2123                           ;lcd.c: 123:         i++;
  2124  0013EC  2A22               	incf	lcd_str@i^0,f,c
  2125  0013EE                     l1780:
  2126                           
  2127                           ;lcd.c: 121:     while (str[i] != 0) {
  2128  0013EE  5022               	movf	lcd_str@i^0,w,c
  2129  0013F0  241E               	addwf	lcd_str@str^0,w,c
  2130  0013F2  6E20               	movwf	??_lcd_str^0,c
  2131  0013F4  0E00               	movlw	0
  2132  0013F6  201F               	addwfc	(lcd_str@str+1)^0,w,c
  2133  0013F8  6E21               	movwf	(??_lcd_str+1)^0,c
  2134  0013FA  C020  FFF6         	movff	??_lcd_str,tblptrl
  2135  0013FE  C021  FFF7         	movff	??_lcd_str+1,tblptrh
  2136  001402                     	if	0	;tblptru may be non-zero
  2137  001402                     	endif
  2138  001402                     	if	0	;tblptru may be non-zero
  2139  001402                     	endif
  2140  001402  0008               	tblrd		*
  2141  001404  50F5               	movf	tablat,w,c
  2142  001406  0900               	iorlw	0
  2143  001408  A4D8               	btfss	status,2,c
  2144  00140A  EF09  F00A         	goto	u1221
  2145  00140E  EF0B  F00A         	goto	u1220
  2146  001412                     u1221:
  2147  001412  EFE8  F009         	goto	l1776
  2148  001416                     u1220:
  2149  001416  0012               	return		;funcret
  2150  001418                     __end_of_lcd_str:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function _lcdData *****************
  2154 ;; Defined at:
  2155 ;;		line 74 in file "lcd.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  valor           1    wreg     unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  valor           1    6[COMRAM] unsigned char 
  2160 ;;  old_D           1    7[COMRAM] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2170 ;;      Params:         0       0       0       0       0       0       0
  2171 ;;      Locals:         2       0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0
  2173 ;;      Totals:         2       0       0       0       0       0       0
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 1
  2177 ;; This function calls:
  2178 ;;		_Delay40us
  2179 ;;		_digitalWrite
  2180 ;; This function is called by:
  2181 ;;		_lcd_str
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text15
  2186  0012D4                     __ptext15:
  2187                           	callstack 0
  2188  0012D4                     _lcdData:
  2189                           	callstack 27
  2190                           
  2191                           ;incstack = 0
  2192                           ;lcdData@valor stored from wreg
  2193  0012D4  6E1C               	movwf	lcdData@valor^0,c
  2194  0012D6                     
  2195                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  2196  0012D6  CF83 F01D          	movff	3971,lcdData@old_D	;volatile
  2197  0012DA                     
  2198                           ;lcd.c: 80:     TRISD = 0x00;
  2199  0012DA  0E00               	movlw	0
  2200  0012DC  6E95               	movwf	149,c	;volatile
  2201  0012DE                     
  2202                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  2203  0012DE  0E00               	movlw	0
  2204  0012E0  6E17               	movwf	(digitalWrite@pin+1)^0,c
  2205  0012E2  0E22               	movlw	34
  2206  0012E4  6E16               	movwf	digitalWrite@pin^0,c
  2207  0012E6  0E00               	movlw	0
  2208  0012E8  6E19               	movwf	(digitalWrite@value+1)^0,c
  2209  0012EA  0E01               	movlw	1
  2210  0012EC  6E18               	movwf	digitalWrite@value^0,c
  2211  0012EE  EC4C  F003         	call	_digitalWrite	;wreg free
  2212  0012F2                     
  2213                           ;lcd.c: 83:  PORTD = valor;
  2214  0012F2  C01C  FF83         	movff	lcdData@valor,3971	;volatile
  2215  0012F6                     
  2216                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  2217  0012F6  0E00               	movlw	0
  2218  0012F8  6E17               	movwf	(digitalWrite@pin+1)^0,c
  2219  0012FA  0E21               	movlw	33
  2220  0012FC  6E16               	movwf	digitalWrite@pin^0,c
  2221  0012FE  0E00               	movlw	0
  2222  001300  6E19               	movwf	(digitalWrite@value+1)^0,c
  2223  001302  0E01               	movlw	1
  2224  001304  6E18               	movwf	digitalWrite@value^0,c
  2225  001306  EC4C  F003         	call	_digitalWrite	;wreg free
  2226  00130A                     
  2227                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  2228  00130A  0E00               	movlw	0
  2229  00130C  6E17               	movwf	(digitalWrite@pin+1)^0,c
  2230  00130E  0E21               	movlw	33
  2231  001310  6E16               	movwf	digitalWrite@pin^0,c
  2232  001312  0E00               	movlw	0
  2233  001314  6E19               	movwf	(digitalWrite@value+1)^0,c
  2234  001316  0E00               	movlw	0
  2235  001318  6E18               	movwf	digitalWrite@value^0,c
  2236  00131A  EC4C  F003         	call	_digitalWrite	;wreg free
  2237  00131E                     
  2238                           ;lcd.c: 88:     PORTD= old_D;
  2239  00131E  C01D  FF83         	movff	lcdData@old_D,3971	;volatile
  2240  001322                     
  2241                           ;lcd.c: 90:  Delay40us();
  2242  001322  EC93  F00A         	call	_Delay40us	;wreg free
  2243  001326  0012               	return		;funcret
  2244  001328                     __end_of_lcdData:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _lcdCommand *****************
  2248 ;; Defined at:
  2249 ;;		line 48 in file "lcd.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  cmd             1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  cmd             1    7[COMRAM] unsigned char 
  2254 ;;  old_D           1    6[COMRAM] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2264 ;;      Params:         0       0       0       0       0       0       0
  2265 ;;      Locals:         2       0       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0
  2267 ;;      Totals:         2       0       0       0       0       0       0
  2268 ;;Total ram usage:        2 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 2
  2271 ;; This function calls:
  2272 ;;		_Delay2ms
  2273 ;;		_Delay40us
  2274 ;;		_digitalWrite
  2275 ;; This function is called by:
  2276 ;;		_luz
  2277 ;;		_vent
  2278 ;;		_porta
  2279 ;;		_aquec
  2280 ;;		_lcdPrint
  2281 ;;		_lcdPrintInicio
  2282 ;;		_lcdInit
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text16
  2287  000F1E                     __ptext16:
  2288                           	callstack 0
  2289  000F1E                     _lcdCommand:
  2290                           	callstack 26
  2291                           
  2292                           ;incstack = 0
  2293                           ;lcdCommand@cmd stored from wreg
  2294  000F1E  6E1D               	movwf	lcdCommand@cmd^0,c
  2295  000F20                     
  2296                           ;lcd.c: 48: void lcdCommand(unsigned char cmd);lcd.c: 49: {;lcd.c: 50:     unsigned char
      +                           old_D;;lcd.c: 51:     old_D = PORTD;
  2297  000F20  CF83 F01C          	movff	3971,lcdCommand@old_D	;volatile
  2298  000F24                     
  2299                           ;lcd.c: 54:     TRISD = 0x00;
  2300  000F24  0E00               	movlw	0
  2301  000F26  6E95               	movwf	149,c	;volatile
  2302  000F28                     
  2303                           ;lcd.c: 56:  digitalWrite(PIN_E2, 0);
  2304  000F28  0E00               	movlw	0
  2305  000F2A  6E17               	movwf	(digitalWrite@pin+1)^0,c
  2306  000F2C  0E22               	movlw	34
  2307  000F2E  6E16               	movwf	digitalWrite@pin^0,c
  2308  000F30  0E00               	movlw	0
  2309  000F32  6E19               	movwf	(digitalWrite@value+1)^0,c
  2310  000F34  0E00               	movlw	0
  2311  000F36  6E18               	movwf	digitalWrite@value^0,c
  2312  000F38  EC4C  F003         	call	_digitalWrite	;wreg free
  2313  000F3C                     
  2314                           ;lcd.c: 57:  PORTD = cmd;
  2315  000F3C  C01D  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2316  000F40                     
  2317                           ;lcd.c: 59:     digitalWrite(PIN_E1, 1);
  2318  000F40  0E00               	movlw	0
  2319  000F42  6E17               	movwf	(digitalWrite@pin+1)^0,c
  2320  000F44  0E21               	movlw	33
  2321  000F46  6E16               	movwf	digitalWrite@pin^0,c
  2322  000F48  0E00               	movlw	0
  2323  000F4A  6E19               	movwf	(digitalWrite@value+1)^0,c
  2324  000F4C  0E01               	movlw	1
  2325  000F4E  6E18               	movwf	digitalWrite@value^0,c
  2326  000F50  EC4C  F003         	call	_digitalWrite	;wreg free
  2327  000F54                     
  2328                           ;lcd.c: 60:  digitalWrite(PIN_E1, 0);
  2329  000F54  0E00               	movlw	0
  2330  000F56  6E17               	movwf	(digitalWrite@pin+1)^0,c
  2331  000F58  0E21               	movlw	33
  2332  000F5A  6E16               	movwf	digitalWrite@pin^0,c
  2333  000F5C  0E00               	movlw	0
  2334  000F5E  6E19               	movwf	(digitalWrite@value+1)^0,c
  2335  000F60  0E00               	movlw	0
  2336  000F62  6E18               	movwf	digitalWrite@value^0,c
  2337  000F64  EC4C  F003         	call	_digitalWrite	;wreg free
  2338  000F68                     
  2339                           ;lcd.c: 63:     PORTD= old_D;
  2340  000F68  C01C  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2341  000F6C                     
  2342                           ;lcd.c: 65:     if((cmd == 0x02)||(cmd == 0x01)){
  2343  000F6C  0E02               	movlw	2
  2344  000F6E  181D               	xorwf	lcdCommand@cmd^0,w,c
  2345  000F70  B4D8               	btfsc	status,2,c
  2346  000F72  EFBD  F007         	goto	u1201
  2347  000F76  EFBF  F007         	goto	u1200
  2348  000F7A                     u1201:
  2349  000F7A  EFC7  F007         	goto	l1770
  2350  000F7E                     u1200:
  2351  000F7E  041D               	decf	lcdCommand@cmd^0,w,c
  2352  000F80  A4D8               	btfss	status,2,c
  2353  000F82  EFC5  F007         	goto	u1211
  2354  000F86  EFC7  F007         	goto	u1210
  2355  000F8A                     u1211:
  2356  000F8A  EFCB  F007         	goto	l1772
  2357  000F8E                     u1210:
  2358  000F8E                     l1770:
  2359                           
  2360                           ;lcd.c: 66:        Delay2ms();
  2361  000F8E  EC85  F00A         	call	_Delay2ms	;wreg free
  2362                           
  2363                           ;lcd.c: 67:     }else{
  2364  000F92  EFCD  F007         	goto	l304
  2365  000F96                     l1772:
  2366                           
  2367                           ;lcd.c: 68:     Delay40us();
  2368  000F96  EC93  F00A         	call	_Delay40us	;wreg free
  2369  000F9A                     l304:
  2370  000F9A  0012               	return		;funcret
  2371  000F9C                     __end_of_lcdCommand:
  2372                           	callstack 0
  2373                           
  2374 ;; *************** function _digitalWrite *****************
  2375 ;; Defined at:
  2376 ;;		line 14 in file "io.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  pin             2    0[COMRAM] int 
  2379 ;;  value           2    2[COMRAM] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2391 ;;      Params:         4       0       0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0       0       0
  2393 ;;      Temps:          2       0       0       0       0       0       0
  2394 ;;      Totals:         6       0       0       0       0       0       0
  2395 ;;Total ram usage:        6 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_lcdCommand
  2401 ;;		_lcdData
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text17
  2406  000698                     __ptext17:
  2407                           	callstack 0
  2408  000698                     _digitalWrite:
  2409                           	callstack 27
  2410  000698                     
  2411                           ;io.c: 16:     if(pin <8){
  2412  000698  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2413  00069A  EF5A  F003         	goto	u1000
  2414  00069E  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2415  0006A0  E107               	bnz	u1001
  2416  0006A2  0E08               	movlw	8
  2417  0006A4  5C16               	subwf	digitalWrite@pin^0,w,c
  2418  0006A6  B0D8               	btfsc	status,0,c
  2419  0006A8  EF58  F003         	goto	u1001
  2420  0006AC  EF5A  F003         	goto	u1000
  2421  0006B0                     u1001:
  2422  0006B0  EF84  F003         	goto	l1704
  2423  0006B4                     u1000:
  2424  0006B4                     
  2425                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2426  0006B4  5018               	movf	digitalWrite@value^0,w,c
  2427  0006B6  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2428  0006B8  B4D8               	btfsc	status,2,c
  2429  0006BA  EF61  F003         	goto	u1011
  2430  0006BE  EF63  F003         	goto	u1010
  2431  0006C2                     u1011:
  2432  0006C2  EF73  F003         	goto	l1702
  2433  0006C6                     u1010:
  2434  0006C6  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2435  0006CA  0E01               	movlw	1
  2436  0006CC  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2437  0006CE  2A1A               	incf	??_digitalWrite^0,f,c
  2438  0006D0  EF6C  F003         	goto	u1024
  2439  0006D4                     u1025:
  2440  0006D4  90D8               	bcf	status,0,c
  2441  0006D6  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2442  0006D8                     u1024:
  2443  0006D8  2E1A               	decfsz	??_digitalWrite^0,f,c
  2444  0006DA  EF6A  F003         	goto	u1025
  2445  0006DE  501B               	movf	(??_digitalWrite+1)^0,w,c
  2446  0006E0  1280               	iorwf	128,f,c	;volatile
  2447  0006E2  EF72  F004         	goto	l197
  2448  0006E6                     l1702:
  2449  0006E6  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2450  0006EA  0E01               	movlw	1
  2451  0006EC  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2452  0006EE  2A1A               	incf	??_digitalWrite^0,f,c
  2453  0006F0  EF7C  F003         	goto	u1034
  2454  0006F4                     u1035:
  2455  0006F4  90D8               	bcf	status,0,c
  2456  0006F6  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2457  0006F8                     u1034:
  2458  0006F8  2E1A               	decfsz	??_digitalWrite^0,f,c
  2459  0006FA  EF7A  F003         	goto	u1035
  2460  0006FE  501B               	movf	(??_digitalWrite+1)^0,w,c
  2461  000700  0AFF               	xorlw	255
  2462  000702  1680               	andwf	128,f,c	;volatile
  2463  000704  EF72  F004         	goto	l197
  2464  000708                     l1704:
  2465  000708  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2466  00070A  EF92  F003         	goto	u1040
  2467  00070E  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2468  000710  E107               	bnz	u1041
  2469  000712  0E10               	movlw	16
  2470  000714  5C16               	subwf	digitalWrite@pin^0,w,c
  2471  000716  B0D8               	btfsc	status,0,c
  2472  000718  EF90  F003         	goto	u1041
  2473  00071C  EF92  F003         	goto	u1040
  2474  000720                     u1041:
  2475  000720  EFC0  F003         	goto	l1712
  2476  000724                     u1040:
  2477  000724                     
  2478                           ;io.c: 20:         pin -=8;
  2479  000724  0EF8               	movlw	248
  2480  000726  2616               	addwf	digitalWrite@pin^0,f,c
  2481  000728  0EFF               	movlw	255
  2482  00072A  2217               	addwfc	(digitalWrite@pin+1)^0,f,c
  2483                           
  2484                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2485  00072C  5018               	movf	digitalWrite@value^0,w,c
  2486  00072E  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2487  000730  B4D8               	btfsc	status,2,c
  2488  000732  EF9D  F003         	goto	u1051
  2489  000736  EF9F  F003         	goto	u1050
  2490  00073A                     u1051:
  2491  00073A  EFAF  F003         	goto	l1710
  2492  00073E                     u1050:
  2493  00073E  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2494  000742  0E01               	movlw	1
  2495  000744  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2496  000746  2A1A               	incf	??_digitalWrite^0,f,c
  2497  000748  EFA8  F003         	goto	u1064
  2498  00074C                     u1065:
  2499  00074C  90D8               	bcf	status,0,c
  2500  00074E  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2501  000750                     u1064:
  2502  000750  2E1A               	decfsz	??_digitalWrite^0,f,c
  2503  000752  EFA6  F003         	goto	u1065
  2504  000756  501B               	movf	(??_digitalWrite+1)^0,w,c
  2505  000758  1281               	iorwf	129,f,c	;volatile
  2506  00075A  EF72  F004         	goto	l197
  2507  00075E                     l1710:
  2508  00075E  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2509  000762  0E01               	movlw	1
  2510  000764  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2511  000766  2A1A               	incf	??_digitalWrite^0,f,c
  2512  000768  EFB8  F003         	goto	u1074
  2513  00076C                     u1075:
  2514  00076C  90D8               	bcf	status,0,c
  2515  00076E  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2516  000770                     u1074:
  2517  000770  2E1A               	decfsz	??_digitalWrite^0,f,c
  2518  000772  EFB6  F003         	goto	u1075
  2519  000776  501B               	movf	(??_digitalWrite+1)^0,w,c
  2520  000778  0AFF               	xorlw	255
  2521  00077A  1681               	andwf	129,f,c	;volatile
  2522  00077C  EF72  F004         	goto	l197
  2523  000780                     l1712:
  2524  000780  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2525  000782  EFCE  F003         	goto	u1080
  2526  000786  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2527  000788  E107               	bnz	u1081
  2528  00078A  0E18               	movlw	24
  2529  00078C  5C16               	subwf	digitalWrite@pin^0,w,c
  2530  00078E  B0D8               	btfsc	status,0,c
  2531  000790  EFCC  F003         	goto	u1081
  2532  000794  EFCE  F003         	goto	u1080
  2533  000798                     u1081:
  2534  000798  EFFC  F003         	goto	l1720
  2535  00079C                     u1080:
  2536  00079C                     
  2537                           ;io.c: 24:         pin -=16;
  2538  00079C  0EF0               	movlw	240
  2539  00079E  2616               	addwf	digitalWrite@pin^0,f,c
  2540  0007A0  0EFF               	movlw	255
  2541  0007A2  2217               	addwfc	(digitalWrite@pin+1)^0,f,c
  2542                           
  2543                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2544  0007A4  5018               	movf	digitalWrite@value^0,w,c
  2545  0007A6  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2546  0007A8  B4D8               	btfsc	status,2,c
  2547  0007AA  EFD9  F003         	goto	u1091
  2548  0007AE  EFDB  F003         	goto	u1090
  2549  0007B2                     u1091:
  2550  0007B2  EFEB  F003         	goto	l1718
  2551  0007B6                     u1090:
  2552  0007B6  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2553  0007BA  0E01               	movlw	1
  2554  0007BC  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2555  0007BE  2A1A               	incf	??_digitalWrite^0,f,c
  2556  0007C0  EFE4  F003         	goto	u1104
  2557  0007C4                     u1105:
  2558  0007C4  90D8               	bcf	status,0,c
  2559  0007C6  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2560  0007C8                     u1104:
  2561  0007C8  2E1A               	decfsz	??_digitalWrite^0,f,c
  2562  0007CA  EFE2  F003         	goto	u1105
  2563  0007CE  501B               	movf	(??_digitalWrite+1)^0,w,c
  2564  0007D0  1282               	iorwf	130,f,c	;volatile
  2565  0007D2  EF72  F004         	goto	l197
  2566  0007D6                     l1718:
  2567  0007D6  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2568  0007DA  0E01               	movlw	1
  2569  0007DC  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2570  0007DE  2A1A               	incf	??_digitalWrite^0,f,c
  2571  0007E0  EFF4  F003         	goto	u1114
  2572  0007E4                     u1115:
  2573  0007E4  90D8               	bcf	status,0,c
  2574  0007E6  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2575  0007E8                     u1114:
  2576  0007E8  2E1A               	decfsz	??_digitalWrite^0,f,c
  2577  0007EA  EFF2  F003         	goto	u1115
  2578  0007EE  501B               	movf	(??_digitalWrite+1)^0,w,c
  2579  0007F0  0AFF               	xorlw	255
  2580  0007F2  1682               	andwf	130,f,c	;volatile
  2581  0007F4  EF72  F004         	goto	l197
  2582  0007F8                     l1720:
  2583  0007F8  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2584  0007FA  EF0A  F004         	goto	u1120
  2585  0007FE  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2586  000800  E107               	bnz	u1121
  2587  000802  0E20               	movlw	32
  2588  000804  5C16               	subwf	digitalWrite@pin^0,w,c
  2589  000806  B0D8               	btfsc	status,0,c
  2590  000808  EF08  F004         	goto	u1121
  2591  00080C  EF0A  F004         	goto	u1120
  2592  000810                     u1121:
  2593  000810  EF38  F004         	goto	l1728
  2594  000814                     u1120:
  2595  000814                     
  2596                           ;io.c: 28:         pin -=24;
  2597  000814  0EE8               	movlw	232
  2598  000816  2616               	addwf	digitalWrite@pin^0,f,c
  2599  000818  0EFF               	movlw	255
  2600  00081A  2217               	addwfc	(digitalWrite@pin+1)^0,f,c
  2601                           
  2602                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  2603  00081C  5018               	movf	digitalWrite@value^0,w,c
  2604  00081E  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2605  000820  B4D8               	btfsc	status,2,c
  2606  000822  EF15  F004         	goto	u1131
  2607  000826  EF17  F004         	goto	u1130
  2608  00082A                     u1131:
  2609  00082A  EF27  F004         	goto	l1726
  2610  00082E                     u1130:
  2611  00082E  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2612  000832  0E01               	movlw	1
  2613  000834  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2614  000836  2A1A               	incf	??_digitalWrite^0,f,c
  2615  000838  EF20  F004         	goto	u1144
  2616  00083C                     u1145:
  2617  00083C  90D8               	bcf	status,0,c
  2618  00083E  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2619  000840                     u1144:
  2620  000840  2E1A               	decfsz	??_digitalWrite^0,f,c
  2621  000842  EF1E  F004         	goto	u1145
  2622  000846  501B               	movf	(??_digitalWrite+1)^0,w,c
  2623  000848  1283               	iorwf	131,f,c	;volatile
  2624  00084A  EF72  F004         	goto	l197
  2625  00084E                     l1726:
  2626  00084E  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2627  000852  0E01               	movlw	1
  2628  000854  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2629  000856  2A1A               	incf	??_digitalWrite^0,f,c
  2630  000858  EF30  F004         	goto	u1154
  2631  00085C                     u1155:
  2632  00085C  90D8               	bcf	status,0,c
  2633  00085E  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2634  000860                     u1154:
  2635  000860  2E1A               	decfsz	??_digitalWrite^0,f,c
  2636  000862  EF2E  F004         	goto	u1155
  2637  000866  501B               	movf	(??_digitalWrite+1)^0,w,c
  2638  000868  0AFF               	xorlw	255
  2639  00086A  1683               	andwf	131,f,c	;volatile
  2640  00086C  EF72  F004         	goto	l197
  2641  000870                     l1728:
  2642  000870  BE17               	btfsc	(digitalWrite@pin+1)^0,7,c
  2643  000872  EF46  F004         	goto	u1160
  2644  000876  5017               	movf	(digitalWrite@pin+1)^0,w,c
  2645  000878  E107               	bnz	u1161
  2646  00087A  0E28               	movlw	40
  2647  00087C  5C16               	subwf	digitalWrite@pin^0,w,c
  2648  00087E  B0D8               	btfsc	status,0,c
  2649  000880  EF44  F004         	goto	u1161
  2650  000884  EF46  F004         	goto	u1160
  2651  000888                     u1161:
  2652  000888  EF72  F004         	goto	l197
  2653  00088C                     u1160:
  2654  00088C                     
  2655                           ;io.c: 32:         pin -=32;
  2656  00088C  0EE0               	movlw	224
  2657  00088E  2616               	addwf	digitalWrite@pin^0,f,c
  2658  000890  0EFF               	movlw	255
  2659  000892  2217               	addwfc	(digitalWrite@pin+1)^0,f,c
  2660                           
  2661                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  2662  000894  5018               	movf	digitalWrite@value^0,w,c
  2663  000896  1019               	iorwf	(digitalWrite@value+1)^0,w,c
  2664  000898  B4D8               	btfsc	status,2,c
  2665  00089A  EF51  F004         	goto	u1171
  2666  00089E  EF53  F004         	goto	u1170
  2667  0008A2                     u1171:
  2668  0008A2  EF63  F004         	goto	l1734
  2669  0008A6                     u1170:
  2670  0008A6  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2671  0008AA  0E01               	movlw	1
  2672  0008AC  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2673  0008AE  2A1A               	incf	??_digitalWrite^0,f,c
  2674  0008B0  EF5C  F004         	goto	u1184
  2675  0008B4                     u1185:
  2676  0008B4  90D8               	bcf	status,0,c
  2677  0008B6  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2678  0008B8                     u1184:
  2679  0008B8  2E1A               	decfsz	??_digitalWrite^0,f,c
  2680  0008BA  EF5A  F004         	goto	u1185
  2681  0008BE  501B               	movf	(??_digitalWrite+1)^0,w,c
  2682  0008C0  1284               	iorwf	132,f,c	;volatile
  2683  0008C2  EF72  F004         	goto	l197
  2684  0008C6                     l1734:
  2685  0008C6  C016  F01A         	movff	digitalWrite@pin,??_digitalWrite
  2686  0008CA  0E01               	movlw	1
  2687  0008CC  6E1B               	movwf	(??_digitalWrite+1)^0,c
  2688  0008CE  2A1A               	incf	??_digitalWrite^0,f,c
  2689  0008D0  EF6C  F004         	goto	u1194
  2690  0008D4                     u1195:
  2691  0008D4  90D8               	bcf	status,0,c
  2692  0008D6  361B               	rlcf	(??_digitalWrite+1)^0,f,c
  2693  0008D8                     u1194:
  2694  0008D8  2E1A               	decfsz	??_digitalWrite^0,f,c
  2695  0008DA  EF6A  F004         	goto	u1195
  2696  0008DE  501B               	movf	(??_digitalWrite+1)^0,w,c
  2697  0008E0  0AFF               	xorlw	255
  2698  0008E2  1684               	andwf	132,f,c	;volatile
  2699  0008E4                     l197:
  2700  0008E4  0012               	return		;funcret
  2701  0008E6                     __end_of_digitalWrite:
  2702                           	callstack 0
  2703                           
  2704 ;; *************** function _Delay2ms *****************
  2705 ;; Defined at:
  2706 ;;		line 37 in file "lcd.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  i               1    1[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2720 ;;      Params:         0       0       0       0       0       0       0
  2721 ;;      Locals:         1       0       0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0
  2723 ;;      Totals:         1       0       0       0       0       0       0
  2724 ;;Total ram usage:        1 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; Hardware stack levels required when called: 1
  2727 ;; This function calls:
  2728 ;;		_Delay40us
  2729 ;; This function is called by:
  2730 ;;		_lcdCommand
  2731 ;;		_lcdInit
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text18
  2736  00150A                     __ptext18:
  2737                           	callstack 0
  2738  00150A                     _Delay2ms:
  2739                           	callstack 26
  2740  00150A                     
  2741                           ;lcd.c: 39:  unsigned char i;;lcd.c: 40:  for(i=0; i < 50; i++)
  2742  00150A  0E00               	movlw	0
  2743  00150C  6E17               	movwf	Delay2ms@i^0,c
  2744  00150E                     l1080:
  2745                           
  2746                           ;lcd.c: 41:  {;lcd.c: 42:   Delay40us();
  2747  00150E  EC93  F00A         	call	_Delay40us	;wreg free
  2748  001512                     
  2749                           ;lcd.c: 43:  }
  2750  001512  2A17               	incf	Delay2ms@i^0,f,c
  2751  001514  0E31               	movlw	49
  2752  001516  6417               	cpfsgt	Delay2ms@i^0,c
  2753  001518  EF90  F00A         	goto	u221
  2754  00151C  EF92  F00A         	goto	u220
  2755  001520                     u221:
  2756  001520  EF87  F00A         	goto	l1080
  2757  001524                     u220:
  2758  001524  0012               	return		;funcret
  2759  001526                     __end_of_Delay2ms:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _Delay40us *****************
  2763 ;; Defined at:
  2764 ;;		line 31 in file "lcd.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  i               1    0[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2778 ;;      Params:         0       0       0       0       0       0       0
  2779 ;;      Locals:         1       0       0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0
  2781 ;;      Totals:         1       0       0       0       0       0       0
  2782 ;;Total ram usage:        1 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_Delay2ms
  2788 ;;		_lcdCommand
  2789 ;;		_lcdData
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text19
  2794  001526                     __ptext19:
  2795                           	callstack 0
  2796  001526                     _Delay40us:
  2797                           	callstack 27
  2798  001526                     
  2799                           ;lcd.c: 33:  unsigned char i;;lcd.c: 34:  for(i=0; i < 25; i++);
  2800  001526  0E00               	movlw	0
  2801  001528  6E16               	movwf	Delay40us@i^0,c
  2802  00152A                     l1070:
  2803  00152A  2A16               	incf	Delay40us@i^0,f,c
  2804  00152C  0E18               	movlw	24
  2805  00152E  6416               	cpfsgt	Delay40us@i^0,c
  2806  001530  EF9C  F00A         	goto	u211
  2807  001534  EF9E  F00A         	goto	u210
  2808  001538                     u211:
  2809  001538  EF95  F00A         	goto	l1070
  2810  00153C                     u210:
  2811  00153C  0012               	return		;funcret
  2812  00153E                     __end_of_Delay40us:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _contrVent *****************
  2816 ;; Defined at:
  2817 ;;		line 105 in file "main.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2831 ;;      Params:         0       0       0       0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0
  2834 ;;      Totals:         0       0       0       0       0       0       0
  2835 ;;Total ram usage:        0 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 2
  2838 ;; This function calls:
  2839 ;;		___awdiv
  2840 ;;		___wmul
  2841 ;;		_adcRead
  2842 ;;		_pwmSet1
  2843 ;; This function is called by:
  2844 ;;		_main
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text20
  2849  0011D0                     __ptext20:
  2850                           	callstack 0
  2851  0011D0                     _contrVent:
  2852                           	callstack 28
  2853  0011D0                     
  2854                           ;main.c: 106:     if (estadoVent) {
  2855  0011D0  500B               	movf	_estadoVent^0,w,c
  2856  0011D2  100C               	iorwf	(_estadoVent+1)^0,w,c
  2857  0011D4  B4D8               	btfsc	status,2,c
  2858  0011D6  EFEF  F008         	goto	u1691
  2859  0011DA  EFF1  F008         	goto	u1690
  2860  0011DE                     u1691:
  2861  0011DE  EF12  F009         	goto	l2132
  2862  0011E2                     u1690:
  2863  0011E2                     
  2864                           ;main.c: 107:         vel = (adcRead(0)*20) / 204;
  2865  0011E2  0E00               	movlw	0
  2866  0011E4  6E17               	movwf	(adcRead@channel+1)^0,c
  2867  0011E6  0E00               	movlw	0
  2868  0011E8  6E16               	movwf	adcRead@channel^0,c
  2869  0011EA  EC0C  F00A         	call	_adcRead	;wreg free
  2870  0011EE  C016  F01A         	movff	?_adcRead,___wmul@multiplier
  2871  0011F2  C017  F01B         	movff	?_adcRead+1,___wmul@multiplier+1
  2872  0011F6  0E00               	movlw	0
  2873  0011F8  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  2874  0011FA  0E14               	movlw	20
  2875  0011FC  6E1C               	movwf	___wmul@multiplicand^0,c
  2876  0011FE  EC72  F00A         	call	___wmul	;wreg free
  2877  001202  C01A  F020         	movff	?___wmul,___awdiv@dividend
  2878  001206  C01B  F021         	movff	?___wmul+1,___awdiv@dividend+1
  2879  00120A  0E00               	movlw	0
  2880  00120C  6E23               	movwf	(___awdiv@divisor+1)^0,c
  2881  00120E  0ECC               	movlw	204
  2882  001210  6E22               	movwf	___awdiv@divisor^0,c
  2883  001212  ECD0  F006         	call	___awdiv	;wreg free
  2884  001216  5020               	movf	?___awdiv^0,w,c
  2885  001218  6E15               	movwf	_vel^0,c
  2886                           
  2887                           ;main.c: 108:         pwmSet1(vel);
  2888  00121A  5015               	movf	_vel^0,w,c
  2889  00121C  EC80  F008         	call	_pwmSet1
  2890                           
  2891                           ;main.c: 109:     } else {
  2892  001220  EF15  F009         	goto	l99
  2893  001224                     l2132:
  2894                           
  2895                           ;main.c: 110:         pwmSet1(0);
  2896  001224  0E00               	movlw	0
  2897  001226  EC80  F008         	call	_pwmSet1
  2898  00122A                     l99:
  2899  00122A  0012               	return		;funcret
  2900  00122C                     __end_of_contrVent:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _pwmSet1 *****************
  2904 ;; Defined at:
  2905 ;;		line 23 in file "pwm.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  porcento        1    wreg     unsigned char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  porcento        1   12[COMRAM] unsigned char 
  2910 ;;  val             2   13[COMRAM] unsigned int 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2920 ;;      Params:         0       0       0       0       0       0       0
  2921 ;;      Locals:         3       0       0       0       0       0       0
  2922 ;;      Temps:          2       0       0       0       0       0       0
  2923 ;;      Totals:         5       0       0       0       0       0       0
  2924 ;;Total ram usage:        5 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 1
  2927 ;; This function calls:
  2928 ;;		___lwdiv
  2929 ;;		___wmul
  2930 ;; This function is called by:
  2931 ;;		_contrVent
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text21
  2936  001100                     __ptext21:
  2937                           	callstack 0
  2938  001100                     _pwmSet1:
  2939                           	callstack 28
  2940                           
  2941                           ;incstack = 0
  2942                           ;pwmSet1@porcento stored from wreg
  2943  001100  6E22               	movwf	pwmSet1@porcento^0,c
  2944  001102                     
  2945                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  2946  001102  0E01               	movlw	1
  2947  001104  24CB               	addwf	203,w,c	;volatile
  2948  001106  6E1A               	movwf	___wmul@multiplier^0,c
  2949  001108  6A1B               	clrf	(___wmul@multiplier+1)^0,c
  2950  00110A  0E00               	movlw	0
  2951  00110C  221B               	addwfc	(___wmul@multiplier+1)^0,f,c
  2952  00110E  C022  F01C         	movff	pwmSet1@porcento,___wmul@multiplicand
  2953  001112  6A1D               	clrf	(___wmul@multiplicand+1)^0,c
  2954  001114  EC72  F00A         	call	___wmul	;wreg free
  2955  001118  C01A  F023         	movff	?___wmul,pwmSet1@val
  2956  00111C  C01B  F024         	movff	?___wmul+1,pwmSet1@val+1
  2957  001120                     
  2958                           ;pwm.c: 31:  val = val / 25;
  2959  001120  C023  F016         	movff	pwmSet1@val,___lwdiv@dividend
  2960  001124  C024  F017         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  2961  001128  0E00               	movlw	0
  2962  00112A  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  2963  00112C  0E19               	movlw	25
  2964  00112E  6E18               	movwf	___lwdiv@divisor^0,c
  2965  001130  EC46  F008         	call	___lwdiv	;wreg free
  2966  001134  C016  F023         	movff	?___lwdiv,pwmSet1@val
  2967  001138  C017  F024         	movff	?___lwdiv+1,pwmSet1@val+1
  2968  00113C                     
  2969                           ;pwm.c: 33:  val &= 0x03ff;
  2970  00113C  0EFF               	movlw	255
  2971  00113E  1623               	andwf	pwmSet1@val^0,f,c
  2972  001140  0E03               	movlw	3
  2973  001142  1624               	andwf	(pwmSet1@val+1)^0,f,c
  2974  001144                     
  2975                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  2976  001144  C023  F020         	movff	pwmSet1@val,??_pwmSet1
  2977  001148  C024  F021         	movff	pwmSet1@val+1,??_pwmSet1+1
  2978  00114C  90D8               	bcf	status,0,c
  2979  00114E  3221               	rrcf	(??_pwmSet1+1)^0,f,c
  2980  001150  3220               	rrcf	??_pwmSet1^0,f,c
  2981  001152  90D8               	bcf	status,0,c
  2982  001154  3221               	rrcf	(??_pwmSet1+1)^0,f,c
  2983  001156  3220               	rrcf	??_pwmSet1^0,f,c
  2984  001158  5020               	movf	??_pwmSet1^0,w,c
  2985  00115A  6EBE               	movwf	190,c	;volatile
  2986  00115C                     
  2987                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  2988  00115C  C023  F020         	movff	pwmSet1@val,??_pwmSet1
  2989  001160  0E03               	movlw	3
  2990  001162  1620               	andwf	??_pwmSet1^0,f,c
  2991  001164  3820               	swapf	??_pwmSet1^0,w,c
  2992  001166  0BF0               	andlw	240
  2993  001168  12BD               	iorwf	189,f,c	;volatile
  2994  00116A  0012               	return		;funcret
  2995  00116C                     __end_of_pwmSet1:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function ___wmul *****************
  2999 ;; Defined at:
  3000 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  multiplier      2    4[COMRAM] unsigned int 
  3003 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  product         2    8[COMRAM] unsigned int 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  2    4[COMRAM] unsigned int 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, prodl, prodh
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3015 ;;      Params:         4       0       0       0       0       0       0
  3016 ;;      Locals:         2       0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0
  3018 ;;      Totals:         6       0       0       0       0       0       0
  3019 ;;Total ram usage:        6 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_contrVent
  3025 ;;		_atraso_s
  3026 ;;		_pwmSet1
  3027 ;;		_pwmSet2
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text22
  3032  0014E4                     __ptext22:
  3033                           	callstack 0
  3034  0014E4                     ___wmul:
  3035                           	callstack 28
  3036  0014E4  501A               	movf	___wmul@multiplier^0,w,c
  3037  0014E6  021C               	mulwf	___wmul@multiplicand^0,c
  3038  0014E8  CFF3 F01E          	movff	prodl,___wmul@product
  3039  0014EC  CFF4 F01F          	movff	prodh,___wmul@product+1
  3040  0014F0  501A               	movf	___wmul@multiplier^0,w,c
  3041  0014F2  021D               	mulwf	(___wmul@multiplicand+1)^0,c
  3042  0014F4  50F3               	movf	243,w,c
  3043  0014F6  261F               	addwf	(___wmul@product+1)^0,f,c
  3044  0014F8  501B               	movf	(___wmul@multiplier+1)^0,w,c
  3045  0014FA  021C               	mulwf	___wmul@multiplicand^0,c
  3046  0014FC  50F3               	movf	243,w,c
  3047  0014FE  261F               	addwf	(___wmul@product+1)^0,f,c
  3048  001500  C01E  F01A         	movff	___wmul@product,?___wmul
  3049  001504  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  3050  001508  0012               	return		;funcret
  3051  00150A                     __end_of___wmul:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function ___lwdiv *****************
  3055 ;; Defined at:
  3056 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  dividend        2    0[COMRAM] unsigned int 
  3059 ;;  divisor         2    2[COMRAM] unsigned int 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  quotient        2    4[COMRAM] unsigned int 
  3062 ;;  counter         1    6[COMRAM] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2    0[COMRAM] unsigned int 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3072 ;;      Params:         4       0       0       0       0       0       0
  3073 ;;      Locals:         3       0       0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0
  3075 ;;      Totals:         7       0       0       0       0       0       0
  3076 ;;Total ram usage:        7 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_pwmSet1
  3082 ;;		_pwmSet2
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text23
  3087  00108C                     __ptext23:
  3088                           	callstack 0
  3089  00108C                     ___lwdiv:
  3090                           	callstack 28
  3091  00108C  0E00               	movlw	0
  3092  00108E  6E1B               	movwf	(___lwdiv@quotient+1)^0,c
  3093  001090  0E00               	movlw	0
  3094  001092  6E1A               	movwf	___lwdiv@quotient^0,c
  3095  001094  5018               	movf	___lwdiv@divisor^0,w,c
  3096  001096  1019               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3097  001098  B4D8               	btfsc	status,2,c
  3098  00109A  EF51  F008         	goto	u1231
  3099  00109E  EF53  F008         	goto	u1230
  3100  0010A2                     u1231:
  3101  0010A2  EF7B  F008         	goto	l842
  3102  0010A6                     u1230:
  3103  0010A6  0E01               	movlw	1
  3104  0010A8  6E1C               	movwf	___lwdiv@counter^0,c
  3105  0010AA  EF5B  F008         	goto	l1796
  3106  0010AE                     l1794:
  3107  0010AE  90D8               	bcf	status,0,c
  3108  0010B0  3618               	rlcf	___lwdiv@divisor^0,f,c
  3109  0010B2  3619               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3110  0010B4  2A1C               	incf	___lwdiv@counter^0,f,c
  3111  0010B6                     l1796:
  3112  0010B6  AE19               	btfss	(___lwdiv@divisor+1)^0,7,c
  3113  0010B8  EF60  F008         	goto	u1241
  3114  0010BC  EF62  F008         	goto	u1240
  3115  0010C0                     u1241:
  3116  0010C0  EF57  F008         	goto	l1794
  3117  0010C4                     u1240:
  3118  0010C4                     l1798:
  3119  0010C4  90D8               	bcf	status,0,c
  3120  0010C6  361A               	rlcf	___lwdiv@quotient^0,f,c
  3121  0010C8  361B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3122  0010CA  5018               	movf	___lwdiv@divisor^0,w,c
  3123  0010CC  5C16               	subwf	___lwdiv@dividend^0,w,c
  3124  0010CE  5019               	movf	(___lwdiv@divisor+1)^0,w,c
  3125  0010D0  5817               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3126  0010D2  A0D8               	btfss	status,0,c
  3127  0010D4  EF6E  F008         	goto	u1251
  3128  0010D8  EF70  F008         	goto	u1250
  3129  0010DC                     u1251:
  3130  0010DC  EF75  F008         	goto	l1806
  3131  0010E0                     u1250:
  3132  0010E0  5018               	movf	___lwdiv@divisor^0,w,c
  3133  0010E2  5E16               	subwf	___lwdiv@dividend^0,f,c
  3134  0010E4  5019               	movf	(___lwdiv@divisor+1)^0,w,c
  3135  0010E6  5A17               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3136  0010E8  801A               	bsf	___lwdiv@quotient^0,0,c
  3137  0010EA                     l1806:
  3138  0010EA  90D8               	bcf	status,0,c
  3139  0010EC  3219               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3140  0010EE  3218               	rrcf	___lwdiv@divisor^0,f,c
  3141  0010F0  2E1C               	decfsz	___lwdiv@counter^0,f,c
  3142  0010F2  EF62  F008         	goto	l1798
  3143  0010F6                     l842:
  3144  0010F6  C01A  F016         	movff	___lwdiv@quotient,?___lwdiv
  3145  0010FA  C01B  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3146  0010FE  0012               	return		;funcret
  3147  001100                     __end_of___lwdiv:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function _adcRead *****************
  3151 ;; Defined at:
  3152 ;;		line 21 in file "adc.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  channel         2    0[COMRAM] unsigned int 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  ADvalor         2    2[COMRAM] unsigned int 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  2    0[COMRAM] int 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3166 ;;      Params:         2       0       0       0       0       0       0
  3167 ;;      Locals:         2       0       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0
  3169 ;;      Totals:         4       0       0       0       0       0       0
  3170 ;;Total ram usage:        4 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_contrVent
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text24
  3180  001418                     __ptext24:
  3181                           	callstack 0
  3182  001418                     _adcRead:
  3183                           	callstack 29
  3184  001418                     
  3185                           ;adc.c: 22:     unsigned int ADvalor;;adc.c: 23:     ADCON0 &= 0b11000011;
  3186  001418  0EC3               	movlw	195
  3187  00141A  16C2               	andwf	194,f,c	;volatile
  3188                           
  3189                           ;adc.c: 24:     if (channel < 3) {
  3190  00141C  5017               	movf	(adcRead@channel+1)^0,w,c
  3191  00141E  E107               	bnz	u1301
  3192  001420  0E03               	movlw	3
  3193  001422  5C16               	subwf	adcRead@channel^0,w,c
  3194  001424  B0D8               	btfsc	status,0,c
  3195  001426  EF17  F00A         	goto	u1301
  3196  00142A  EF19  F00A         	goto	u1300
  3197  00142E                     u1301:
  3198  00142E  EF1D  F00A         	goto	l1884
  3199  001432                     u1300:
  3200  001432                     
  3201                           ;adc.c: 25:         ADCON0 |= channel << 2;
  3202  001432  4416               	rlncf	adcRead@channel^0,w,c	;volatile
  3203  001434  46E8               	rlncf	wreg,f,c
  3204  001436  0BFC               	andlw	252
  3205  001438  12C2               	iorwf	194,f,c	;volatile
  3206  00143A                     l1884:
  3207                           
  3208                           ;adc.c: 28:     ADCON0 |= 0b00000010;
  3209  00143A  82C2               	bsf	194,1,c	;volatile
  3210  00143C                     l132:
  3211  00143C  B2C2               	btfsc	194,1,c	;volatile
  3212  00143E  EF23  F00A         	goto	u1311
  3213  001442  EF25  F00A         	goto	u1310
  3214  001446                     u1311:
  3215  001446  EF1E  F00A         	goto	l132
  3216  00144A                     u1310:
  3217  00144A                     
  3218                           ;adc.c: 32:     ADvalor = ADRESH;
  3219  00144A  CFC4 F018          	movff	4036,adcRead@ADvalor	;volatile
  3220  00144E  6A19               	clrf	(adcRead@ADvalor+1)^0,c
  3221  001450                     
  3222                           ;adc.c: 33:     ADvalor <<= 8;
  3223  001450  5018               	movf	adcRead@ADvalor^0,w,c
  3224  001452  6E19               	movwf	(adcRead@ADvalor+1)^0,c
  3225  001454  6A18               	clrf	adcRead@ADvalor^0,c
  3226  001456                     
  3227                           ;adc.c: 34:     ADvalor += ADRESL;
  3228  001456  50C3               	movf	195,w,c	;volatile
  3229  001458  2618               	addwf	adcRead@ADvalor^0,f,c
  3230  00145A  0E00               	movlw	0
  3231  00145C  2219               	addwfc	(adcRead@ADvalor+1)^0,f,c
  3232  00145E                     
  3233                           ;adc.c: 35:     return ADvalor;
  3234  00145E  C018  F016         	movff	adcRead@ADvalor,?_adcRead
  3235  001462  C019  F017         	movff	adcRead@ADvalor+1,?_adcRead+1
  3236  001466  0012               	return		;funcret
  3237  001468                     __end_of_adcRead:
  3238                           	callstack 0
  3239                           
  3240 ;; *************** function ___awdiv *****************
  3241 ;; Defined at:
  3242 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  dividend        2   10[COMRAM] int 
  3245 ;;  divisor         2   12[COMRAM] int 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  quotient        2   16[COMRAM] int 
  3248 ;;  sign            1   15[COMRAM] unsigned char 
  3249 ;;  counter         1   14[COMRAM] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  2   10[COMRAM] int 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3259 ;;      Params:         4       0       0       0       0       0       0
  3260 ;;      Locals:         4       0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0
  3262 ;;      Totals:         8       0       0       0       0       0       0
  3263 ;;Total ram usage:        8 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_contrVent
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text25
  3273  000DA0                     __ptext25:
  3274                           	callstack 0
  3275  000DA0                     ___awdiv:
  3276                           	callstack 29
  3277  000DA0  0E00               	movlw	0
  3278  000DA2  6E25               	movwf	___awdiv@sign^0,c
  3279  000DA4  BE23               	btfsc	(___awdiv@divisor+1)^0,7,c
  3280  000DA6  EFD9  F006         	goto	u1550
  3281  000DAA  EFD7  F006         	goto	u1551
  3282  000DAE                     u1551:
  3283  000DAE  EFDF  F006         	goto	l1990
  3284  000DB2                     u1550:
  3285  000DB2  6C22               	negf	___awdiv@divisor^0,c
  3286  000DB4  1E23               	comf	(___awdiv@divisor+1)^0,f,c
  3287  000DB6  B0D8               	btfsc	status,0,c
  3288  000DB8  2A23               	incf	(___awdiv@divisor+1)^0,f,c
  3289  000DBA  0E01               	movlw	1
  3290  000DBC  6E25               	movwf	___awdiv@sign^0,c
  3291  000DBE                     l1990:
  3292  000DBE  BE21               	btfsc	(___awdiv@dividend+1)^0,7,c
  3293  000DC0  EFE6  F006         	goto	u1560
  3294  000DC4  EFE4  F006         	goto	u1561
  3295  000DC8                     u1561:
  3296  000DC8  EFEC  F006         	goto	l1996
  3297  000DCC                     u1560:
  3298  000DCC  6C20               	negf	___awdiv@dividend^0,c
  3299  000DCE  1E21               	comf	(___awdiv@dividend+1)^0,f,c
  3300  000DD0  B0D8               	btfsc	status,0,c
  3301  000DD2  2A21               	incf	(___awdiv@dividend+1)^0,f,c
  3302  000DD4  0E01               	movlw	1
  3303  000DD6  1A25               	xorwf	___awdiv@sign^0,f,c
  3304  000DD8                     l1996:
  3305  000DD8  0E00               	movlw	0
  3306  000DDA  6E27               	movwf	(___awdiv@quotient+1)^0,c
  3307  000DDC  0E00               	movlw	0
  3308  000DDE  6E26               	movwf	___awdiv@quotient^0,c
  3309  000DE0  5022               	movf	___awdiv@divisor^0,w,c
  3310  000DE2  1023               	iorwf	(___awdiv@divisor+1)^0,w,c
  3311  000DE4  B4D8               	btfsc	status,2,c
  3312  000DE6  EFF7  F006         	goto	u1571
  3313  000DEA  EFF9  F006         	goto	u1570
  3314  000DEE                     u1571:
  3315  000DEE  EF21  F007         	goto	l2018
  3316  000DF2                     u1570:
  3317  000DF2  0E01               	movlw	1
  3318  000DF4  6E24               	movwf	___awdiv@counter^0,c
  3319  000DF6  EF01  F007         	goto	l2004
  3320  000DFA                     l2002:
  3321  000DFA  90D8               	bcf	status,0,c
  3322  000DFC  3622               	rlcf	___awdiv@divisor^0,f,c
  3323  000DFE  3623               	rlcf	(___awdiv@divisor+1)^0,f,c
  3324  000E00  2A24               	incf	___awdiv@counter^0,f,c
  3325  000E02                     l2004:
  3326  000E02  AE23               	btfss	(___awdiv@divisor+1)^0,7,c
  3327  000E04  EF06  F007         	goto	u1581
  3328  000E08  EF08  F007         	goto	u1580
  3329  000E0C                     u1581:
  3330  000E0C  EFFD  F006         	goto	l2002
  3331  000E10                     u1580:
  3332  000E10                     l2006:
  3333  000E10  90D8               	bcf	status,0,c
  3334  000E12  3626               	rlcf	___awdiv@quotient^0,f,c
  3335  000E14  3627               	rlcf	(___awdiv@quotient+1)^0,f,c
  3336  000E16  5022               	movf	___awdiv@divisor^0,w,c
  3337  000E18  5C20               	subwf	___awdiv@dividend^0,w,c
  3338  000E1A  5023               	movf	(___awdiv@divisor+1)^0,w,c
  3339  000E1C  5821               	subwfb	(___awdiv@dividend+1)^0,w,c
  3340  000E1E  A0D8               	btfss	status,0,c
  3341  000E20  EF14  F007         	goto	u1591
  3342  000E24  EF16  F007         	goto	u1590
  3343  000E28                     u1591:
  3344  000E28  EF1B  F007         	goto	l2014
  3345  000E2C                     u1590:
  3346  000E2C  5022               	movf	___awdiv@divisor^0,w,c
  3347  000E2E  5E20               	subwf	___awdiv@dividend^0,f,c
  3348  000E30  5023               	movf	(___awdiv@divisor+1)^0,w,c
  3349  000E32  5A21               	subwfb	(___awdiv@dividend+1)^0,f,c
  3350  000E34  8026               	bsf	___awdiv@quotient^0,0,c
  3351  000E36                     l2014:
  3352  000E36  90D8               	bcf	status,0,c
  3353  000E38  3223               	rrcf	(___awdiv@divisor+1)^0,f,c
  3354  000E3A  3222               	rrcf	___awdiv@divisor^0,f,c
  3355  000E3C  2E24               	decfsz	___awdiv@counter^0,f,c
  3356  000E3E  EF08  F007         	goto	l2006
  3357  000E42                     l2018:
  3358  000E42  5025               	movf	___awdiv@sign^0,w,c
  3359  000E44  B4D8               	btfsc	status,2,c
  3360  000E46  EF27  F007         	goto	u1601
  3361  000E4A  EF29  F007         	goto	u1600
  3362  000E4E                     u1601:
  3363  000E4E  EF2D  F007         	goto	l2022
  3364  000E52                     u1600:
  3365  000E52  6C26               	negf	___awdiv@quotient^0,c
  3366  000E54  1E27               	comf	(___awdiv@quotient+1)^0,f,c
  3367  000E56  B0D8               	btfsc	status,0,c
  3368  000E58  2A27               	incf	(___awdiv@quotient+1)^0,f,c
  3369  000E5A                     l2022:
  3370  000E5A  C026  F020         	movff	___awdiv@quotient,?___awdiv
  3371  000E5E  C027  F021         	movff	___awdiv@quotient+1,?___awdiv+1
  3372  000E62  0012               	return		;funcret
  3373  000E64                     __end_of___awdiv:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function _adcInit *****************
  3377 ;; Defined at:
  3378 ;;		line 6 in file "adc.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3392 ;;      Params:         0       0       0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0
  3395 ;;      Totals:         0       0       0       0       0       0       0
  3396 ;;Total ram usage:        0 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 1
  3399 ;; This function calls:
  3400 ;;		_pinMode
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text26
  3407  0014B4                     __ptext26:
  3408                           	callstack 0
  3409  0014B4                     _adcInit:
  3410                           	callstack 29
  3411  0014B4                     
  3412                           ;adc.c: 8:     pinMode(PIN_A0, 1);
  3413  0014B4  0E00               	movlw	0
  3414  0014B6  6E17               	movwf	(pinMode@pin+1)^0,c
  3415  0014B8  0E00               	movlw	0
  3416  0014BA  6E16               	movwf	pinMode@pin^0,c
  3417  0014BC  0E00               	movlw	0
  3418  0014BE  6E19               	movwf	(pinMode@type+1)^0,c
  3419  0014C0  0E01               	movlw	1
  3420  0014C2  6E18               	movwf	pinMode@type^0,c
  3421  0014C4  EC73  F004         	call	_pinMode	;wreg free
  3422                           
  3423                           ;adc.c: 9:     pinMode(PIN_A1, 1);
  3424  0014C8  0E00               	movlw	0
  3425  0014CA  6E17               	movwf	(pinMode@pin+1)^0,c
  3426  0014CC  0E01               	movlw	1
  3427  0014CE  6E16               	movwf	pinMode@pin^0,c
  3428  0014D0  0E00               	movlw	0
  3429  0014D2  6E19               	movwf	(pinMode@type+1)^0,c
  3430  0014D4  0E01               	movlw	1
  3431  0014D6  6E18               	movwf	pinMode@type^0,c
  3432  0014D8  EC73  F004         	call	_pinMode	;wreg free
  3433  0014DC                     
  3434                           ;adc.c: 14:     ((ADCON0) |= (1<<(0)));
  3435  0014DC  80C2               	bsf	194,0,c	;volatile
  3436  0014DE                     
  3437                           ;adc.c: 17:     ADCON2 = 0b10101010;
  3438  0014DE  0EAA               	movlw	170
  3439  0014E0  6EC0               	movwf	192,c	;volatile
  3440  0014E2  0012               	return		;funcret
  3441  0014E4                     __end_of_adcInit:
  3442                           	callstack 0
  3443                           
  3444 ;; *************** function _pinMode *****************
  3445 ;; Defined at:
  3446 ;;		line 54 in file "io.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  pin             2    0[COMRAM] int 
  3449 ;;  type            2    2[COMRAM] int 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3461 ;;      Params:         4       0       0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0
  3463 ;;      Temps:          2       0       0       0       0       0       0
  3464 ;;      Totals:         6       0       0       0       0       0       0
  3465 ;;Total ram usage:        6 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_adcInit
  3471 ;;		_lcdInit
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text27
  3476  0008E6                     __ptext27:
  3477                           	callstack 0
  3478  0008E6                     _pinMode:
  3479                           	callstack 29
  3480  0008E6                     
  3481                           ;io.c: 56:     if(pin <8){
  3482  0008E6  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  3483  0008E8  EF81  F004         	goto	u1350
  3484  0008EC  5017               	movf	(pinMode@pin+1)^0,w,c
  3485  0008EE  E107               	bnz	u1351
  3486  0008F0  0E08               	movlw	8
  3487  0008F2  5C16               	subwf	pinMode@pin^0,w,c
  3488  0008F4  B0D8               	btfsc	status,0,c
  3489  0008F6  EF7F  F004         	goto	u1351
  3490  0008FA  EF81  F004         	goto	u1350
  3491  0008FE                     u1351:
  3492  0008FE  EFAB  F004         	goto	l1950
  3493  000902                     u1350:
  3494  000902                     
  3495                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  3496  000902  5018               	movf	pinMode@type^0,w,c
  3497  000904  1019               	iorwf	(pinMode@type+1)^0,w,c
  3498  000906  B4D8               	btfsc	status,2,c
  3499  000908  EF88  F004         	goto	u1361
  3500  00090C  EF8A  F004         	goto	u1360
  3501  000910                     u1361:
  3502  000910  EF9A  F004         	goto	l1948
  3503  000914                     u1360:
  3504  000914  C016  F01A         	movff	pinMode@pin,??_pinMode
  3505  000918  0E01               	movlw	1
  3506  00091A  6E1B               	movwf	(??_pinMode+1)^0,c
  3507  00091C  2A1A               	incf	??_pinMode^0,f,c
  3508  00091E  EF93  F004         	goto	u1374
  3509  000922                     u1375:
  3510  000922  90D8               	bcf	status,0,c
  3511  000924  361B               	rlcf	(??_pinMode+1)^0,f,c
  3512  000926                     u1374:
  3513  000926  2E1A               	decfsz	??_pinMode^0,f,c
  3514  000928  EF91  F004         	goto	u1375
  3515  00092C  501B               	movf	(??_pinMode+1)^0,w,c
  3516  00092E  1292               	iorwf	146,f,c	;volatile
  3517  000930  EF99  F005         	goto	l231
  3518  000934                     l1948:
  3519  000934  C016  F01A         	movff	pinMode@pin,??_pinMode
  3520  000938  0E01               	movlw	1
  3521  00093A  6E1B               	movwf	(??_pinMode+1)^0,c
  3522  00093C  2A1A               	incf	??_pinMode^0,f,c
  3523  00093E  EFA3  F004         	goto	u1384
  3524  000942                     u1385:
  3525  000942  90D8               	bcf	status,0,c
  3526  000944  361B               	rlcf	(??_pinMode+1)^0,f,c
  3527  000946                     u1384:
  3528  000946  2E1A               	decfsz	??_pinMode^0,f,c
  3529  000948  EFA1  F004         	goto	u1385
  3530  00094C  501B               	movf	(??_pinMode+1)^0,w,c
  3531  00094E  0AFF               	xorlw	255
  3532  000950  1692               	andwf	146,f,c	;volatile
  3533  000952  EF99  F005         	goto	l231
  3534  000956                     l1950:
  3535  000956  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  3536  000958  EFB9  F004         	goto	u1390
  3537  00095C  5017               	movf	(pinMode@pin+1)^0,w,c
  3538  00095E  E107               	bnz	u1391
  3539  000960  0E10               	movlw	16
  3540  000962  5C16               	subwf	pinMode@pin^0,w,c
  3541  000964  B0D8               	btfsc	status,0,c
  3542  000966  EFB7  F004         	goto	u1391
  3543  00096A  EFB9  F004         	goto	u1390
  3544  00096E                     u1391:
  3545  00096E  EFE7  F004         	goto	l1958
  3546  000972                     u1390:
  3547  000972                     
  3548                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3549  000972  5018               	movf	pinMode@type^0,w,c
  3550  000974  1019               	iorwf	(pinMode@type+1)^0,w,c
  3551  000976  B4D8               	btfsc	status,2,c
  3552  000978  EFC0  F004         	goto	u1401
  3553  00097C  EFC2  F004         	goto	u1400
  3554  000980                     u1401:
  3555  000980  EFD4  F004         	goto	l1956
  3556  000984                     u1400:
  3557  000984  C016  F01A         	movff	pinMode@pin,??_pinMode
  3558  000988  0EF8               	movlw	-8
  3559  00098A  261A               	addwf	??_pinMode^0,f,c
  3560  00098C  0E01               	movlw	1
  3561  00098E  6E1B               	movwf	(??_pinMode+1)^0,c
  3562  000990  2A1A               	incf	??_pinMode^0,f,c
  3563  000992  EFCD  F004         	goto	u1414
  3564  000996                     u1415:
  3565  000996  90D8               	bcf	status,0,c
  3566  000998  361B               	rlcf	(??_pinMode+1)^0,f,c
  3567  00099A                     u1414:
  3568  00099A  2E1A               	decfsz	??_pinMode^0,f,c
  3569  00099C  EFCB  F004         	goto	u1415
  3570  0009A0  501B               	movf	(??_pinMode+1)^0,w,c
  3571  0009A2  1293               	iorwf	147,f,c	;volatile
  3572  0009A4  EF99  F005         	goto	l231
  3573  0009A8                     l1956:
  3574  0009A8  C016  F01A         	movff	pinMode@pin,??_pinMode
  3575  0009AC  0EF8               	movlw	-8
  3576  0009AE  261A               	addwf	??_pinMode^0,f,c
  3577  0009B0  0E01               	movlw	1
  3578  0009B2  6E1B               	movwf	(??_pinMode+1)^0,c
  3579  0009B4  2A1A               	incf	??_pinMode^0,f,c
  3580  0009B6  EFDF  F004         	goto	u1424
  3581  0009BA                     u1425:
  3582  0009BA  90D8               	bcf	status,0,c
  3583  0009BC  361B               	rlcf	(??_pinMode+1)^0,f,c
  3584  0009BE                     u1424:
  3585  0009BE  2E1A               	decfsz	??_pinMode^0,f,c
  3586  0009C0  EFDD  F004         	goto	u1425
  3587  0009C4  501B               	movf	(??_pinMode+1)^0,w,c
  3588  0009C6  0AFF               	xorlw	255
  3589  0009C8  1693               	andwf	147,f,c	;volatile
  3590  0009CA  EF99  F005         	goto	l231
  3591  0009CE                     l1958:
  3592  0009CE  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  3593  0009D0  EFF5  F004         	goto	u1430
  3594  0009D4  5017               	movf	(pinMode@pin+1)^0,w,c
  3595  0009D6  E107               	bnz	u1431
  3596  0009D8  0E18               	movlw	24
  3597  0009DA  5C16               	subwf	pinMode@pin^0,w,c
  3598  0009DC  B0D8               	btfsc	status,0,c
  3599  0009DE  EFF3  F004         	goto	u1431
  3600  0009E2  EFF5  F004         	goto	u1430
  3601  0009E6                     u1431:
  3602  0009E6  EF23  F005         	goto	l1966
  3603  0009EA                     u1430:
  3604  0009EA                     
  3605                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3606  0009EA  5018               	movf	pinMode@type^0,w,c
  3607  0009EC  1019               	iorwf	(pinMode@type+1)^0,w,c
  3608  0009EE  B4D8               	btfsc	status,2,c
  3609  0009F0  EFFC  F004         	goto	u1441
  3610  0009F4  EFFE  F004         	goto	u1440
  3611  0009F8                     u1441:
  3612  0009F8  EF10  F005         	goto	l1964
  3613  0009FC                     u1440:
  3614  0009FC  C016  F01A         	movff	pinMode@pin,??_pinMode
  3615  000A00  0EF0               	movlw	-16
  3616  000A02  261A               	addwf	??_pinMode^0,f,c
  3617  000A04  0E01               	movlw	1
  3618  000A06  6E1B               	movwf	(??_pinMode+1)^0,c
  3619  000A08  2A1A               	incf	??_pinMode^0,f,c
  3620  000A0A  EF09  F005         	goto	u1454
  3621  000A0E                     u1455:
  3622  000A0E  90D8               	bcf	status,0,c
  3623  000A10  361B               	rlcf	(??_pinMode+1)^0,f,c
  3624  000A12                     u1454:
  3625  000A12  2E1A               	decfsz	??_pinMode^0,f,c
  3626  000A14  EF07  F005         	goto	u1455
  3627  000A18  501B               	movf	(??_pinMode+1)^0,w,c
  3628  000A1A  1294               	iorwf	148,f,c	;volatile
  3629  000A1C  EF99  F005         	goto	l231
  3630  000A20                     l1964:
  3631  000A20  C016  F01A         	movff	pinMode@pin,??_pinMode
  3632  000A24  0EF0               	movlw	-16
  3633  000A26  261A               	addwf	??_pinMode^0,f,c
  3634  000A28  0E01               	movlw	1
  3635  000A2A  6E1B               	movwf	(??_pinMode+1)^0,c
  3636  000A2C  2A1A               	incf	??_pinMode^0,f,c
  3637  000A2E  EF1B  F005         	goto	u1464
  3638  000A32                     u1465:
  3639  000A32  90D8               	bcf	status,0,c
  3640  000A34  361B               	rlcf	(??_pinMode+1)^0,f,c
  3641  000A36                     u1464:
  3642  000A36  2E1A               	decfsz	??_pinMode^0,f,c
  3643  000A38  EF19  F005         	goto	u1465
  3644  000A3C  501B               	movf	(??_pinMode+1)^0,w,c
  3645  000A3E  0AFF               	xorlw	255
  3646  000A40  1694               	andwf	148,f,c	;volatile
  3647  000A42  EF99  F005         	goto	l231
  3648  000A46                     l1966:
  3649  000A46  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  3650  000A48  EF31  F005         	goto	u1470
  3651  000A4C  5017               	movf	(pinMode@pin+1)^0,w,c
  3652  000A4E  E107               	bnz	u1471
  3653  000A50  0E20               	movlw	32
  3654  000A52  5C16               	subwf	pinMode@pin^0,w,c
  3655  000A54  B0D8               	btfsc	status,0,c
  3656  000A56  EF2F  F005         	goto	u1471
  3657  000A5A  EF31  F005         	goto	u1470
  3658  000A5E                     u1471:
  3659  000A5E  EF5F  F005         	goto	l1974
  3660  000A62                     u1470:
  3661  000A62                     
  3662                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3663  000A62  5018               	movf	pinMode@type^0,w,c
  3664  000A64  1019               	iorwf	(pinMode@type+1)^0,w,c
  3665  000A66  B4D8               	btfsc	status,2,c
  3666  000A68  EF38  F005         	goto	u1481
  3667  000A6C  EF3A  F005         	goto	u1480
  3668  000A70                     u1481:
  3669  000A70  EF4C  F005         	goto	l1972
  3670  000A74                     u1480:
  3671  000A74  C016  F01A         	movff	pinMode@pin,??_pinMode
  3672  000A78  0EE8               	movlw	-24
  3673  000A7A  261A               	addwf	??_pinMode^0,f,c
  3674  000A7C  0E01               	movlw	1
  3675  000A7E  6E1B               	movwf	(??_pinMode+1)^0,c
  3676  000A80  2A1A               	incf	??_pinMode^0,f,c
  3677  000A82  EF45  F005         	goto	u1494
  3678  000A86                     u1495:
  3679  000A86  90D8               	bcf	status,0,c
  3680  000A88  361B               	rlcf	(??_pinMode+1)^0,f,c
  3681  000A8A                     u1494:
  3682  000A8A  2E1A               	decfsz	??_pinMode^0,f,c
  3683  000A8C  EF43  F005         	goto	u1495
  3684  000A90  501B               	movf	(??_pinMode+1)^0,w,c
  3685  000A92  1295               	iorwf	149,f,c	;volatile
  3686  000A94  EF99  F005         	goto	l231
  3687  000A98                     l1972:
  3688  000A98  C016  F01A         	movff	pinMode@pin,??_pinMode
  3689  000A9C  0EE8               	movlw	-24
  3690  000A9E  261A               	addwf	??_pinMode^0,f,c
  3691  000AA0  0E01               	movlw	1
  3692  000AA2  6E1B               	movwf	(??_pinMode+1)^0,c
  3693  000AA4  2A1A               	incf	??_pinMode^0,f,c
  3694  000AA6  EF57  F005         	goto	u1504
  3695  000AAA                     u1505:
  3696  000AAA  90D8               	bcf	status,0,c
  3697  000AAC  361B               	rlcf	(??_pinMode+1)^0,f,c
  3698  000AAE                     u1504:
  3699  000AAE  2E1A               	decfsz	??_pinMode^0,f,c
  3700  000AB0  EF55  F005         	goto	u1505
  3701  000AB4  501B               	movf	(??_pinMode+1)^0,w,c
  3702  000AB6  0AFF               	xorlw	255
  3703  000AB8  1695               	andwf	149,f,c	;volatile
  3704  000ABA  EF99  F005         	goto	l231
  3705  000ABE                     l1974:
  3706  000ABE  BE17               	btfsc	(pinMode@pin+1)^0,7,c
  3707  000AC0  EF6D  F005         	goto	u1510
  3708  000AC4  5017               	movf	(pinMode@pin+1)^0,w,c
  3709  000AC6  E107               	bnz	u1511
  3710  000AC8  0E28               	movlw	40
  3711  000ACA  5C16               	subwf	pinMode@pin^0,w,c
  3712  000ACC  B0D8               	btfsc	status,0,c
  3713  000ACE  EF6B  F005         	goto	u1511
  3714  000AD2  EF6D  F005         	goto	u1510
  3715  000AD6                     u1511:
  3716  000AD6  EF99  F005         	goto	l231
  3717  000ADA                     u1510:
  3718  000ADA                     
  3719                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3720  000ADA  5018               	movf	pinMode@type^0,w,c
  3721  000ADC  1019               	iorwf	(pinMode@type+1)^0,w,c
  3722  000ADE  B4D8               	btfsc	status,2,c
  3723  000AE0  EF74  F005         	goto	u1521
  3724  000AE4  EF76  F005         	goto	u1520
  3725  000AE8                     u1521:
  3726  000AE8  EF88  F005         	goto	l1980
  3727  000AEC                     u1520:
  3728  000AEC  C016  F01A         	movff	pinMode@pin,??_pinMode
  3729  000AF0  0EE0               	movlw	-32
  3730  000AF2  261A               	addwf	??_pinMode^0,f,c
  3731  000AF4  0E01               	movlw	1
  3732  000AF6  6E1B               	movwf	(??_pinMode+1)^0,c
  3733  000AF8  2A1A               	incf	??_pinMode^0,f,c
  3734  000AFA  EF81  F005         	goto	u1534
  3735  000AFE                     u1535:
  3736  000AFE  90D8               	bcf	status,0,c
  3737  000B00  361B               	rlcf	(??_pinMode+1)^0,f,c
  3738  000B02                     u1534:
  3739  000B02  2E1A               	decfsz	??_pinMode^0,f,c
  3740  000B04  EF7F  F005         	goto	u1535
  3741  000B08  501B               	movf	(??_pinMode+1)^0,w,c
  3742  000B0A  1296               	iorwf	150,f,c	;volatile
  3743  000B0C  EF99  F005         	goto	l231
  3744  000B10                     l1980:
  3745  000B10  C016  F01A         	movff	pinMode@pin,??_pinMode
  3746  000B14  0EE0               	movlw	-32
  3747  000B16  261A               	addwf	??_pinMode^0,f,c
  3748  000B18  0E01               	movlw	1
  3749  000B1A  6E1B               	movwf	(??_pinMode+1)^0,c
  3750  000B1C  2A1A               	incf	??_pinMode^0,f,c
  3751  000B1E  EF93  F005         	goto	u1544
  3752  000B22                     u1545:
  3753  000B22  90D8               	bcf	status,0,c
  3754  000B24  361B               	rlcf	(??_pinMode+1)^0,f,c
  3755  000B26                     u1544:
  3756  000B26  2E1A               	decfsz	??_pinMode^0,f,c
  3757  000B28  EF91  F005         	goto	u1545
  3758  000B2C  501B               	movf	(??_pinMode+1)^0,w,c
  3759  000B2E  0AFF               	xorlw	255
  3760  000B30  1696               	andwf	150,f,c	;volatile
  3761  000B32                     l231:
  3762  000B32  0012               	return		;funcret
  3763  000B34                     __end_of_pinMode:
  3764                           	callstack 0
  3765                           
  3766                           	psect	rparam
  3767  0000                     
  3768                           	psect	idloc
  3769                           
  3770                           ;Config register IDLOC0 @ 0x200000
  3771                           ;	unspecified, using default values
  3772  200000                     	org	2097152
  3773  200000  FF                 	db	255
  3774                           
  3775                           ;Config register IDLOC1 @ 0x200001
  3776                           ;	unspecified, using default values
  3777  200001                     	org	2097153
  3778  200001  FF                 	db	255
  3779                           
  3780                           ;Config register IDLOC2 @ 0x200002
  3781                           ;	unspecified, using default values
  3782  200002                     	org	2097154
  3783  200002  FF                 	db	255
  3784                           
  3785                           ;Config register IDLOC3 @ 0x200003
  3786                           ;	unspecified, using default values
  3787  200003                     	org	2097155
  3788  200003  FF                 	db	255
  3789                           
  3790                           ;Config register IDLOC4 @ 0x200004
  3791                           ;	unspecified, using default values
  3792  200004                     	org	2097156
  3793  200004  FF                 	db	255
  3794                           
  3795                           ;Config register IDLOC5 @ 0x200005
  3796                           ;	unspecified, using default values
  3797  200005                     	org	2097157
  3798  200005  FF                 	db	255
  3799                           
  3800                           ;Config register IDLOC6 @ 0x200006
  3801                           ;	unspecified, using default values
  3802  200006                     	org	2097158
  3803  200006  FF                 	db	255
  3804                           
  3805                           ;Config register IDLOC7 @ 0x200007
  3806                           ;	unspecified, using default values
  3807  200007                     	org	2097159
  3808  200007  FF                 	db	255
  3809                           
  3810                           	psect	config
  3811                           
  3812                           ; Padding undefined space
  3813  300000                     	org	3145728
  3814  300000  FF                 	db	255
  3815                           
  3816                           ;Config register CONFIG1H @ 0x300001
  3817                           ;	Oscillator Selection bits
  3818                           ;	OSC = HS, HS oscillator
  3819                           ;	Fail-Safe Clock Monitor Enable bit
  3820                           ;	FCMEN = 0x0, unprogrammed default
  3821                           ;	Internal/External Oscillator Switchover bit
  3822                           ;	IESO = 0x0, unprogrammed default
  3823  300001                     	org	3145729
  3824  300001  02                 	db	2
  3825                           
  3826                           ;Config register CONFIG2L @ 0x300002
  3827                           ;	unspecified, using default values
  3828                           ;	Power-up Timer Enable bit
  3829                           ;	PWRT = 0x1, unprogrammed default
  3830                           ;	Brown-out Reset Enable bits
  3831                           ;	BOREN = 0x3, unprogrammed default
  3832                           ;	Brown Out Reset Voltage bits
  3833                           ;	BORV = 0x3, unprogrammed default
  3834  300002                     	org	3145730
  3835  300002  1F                 	db	31
  3836                           
  3837                           ;Config register CONFIG2H @ 0x300003
  3838                           ;	Watchdog Timer Enable bit
  3839                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3840                           ;	Watchdog Timer Postscale Select bits
  3841                           ;	WDTPS = 1, 1:1
  3842  300003                     	org	3145731
  3843  300003  00                 	db	0
  3844                           
  3845                           ; Padding undefined space
  3846  300004                     	org	3145732
  3847  300004  FF                 	db	255
  3848                           
  3849                           ;Config register CONFIG3H @ 0x300005
  3850                           ;	unspecified, using default values
  3851                           ;	CCP2 MUX bit
  3852                           ;	CCP2MX = 0x1, unprogrammed default
  3853                           ;	PORTB A/D Enable bit
  3854                           ;	PBADEN = 0x1, unprogrammed default
  3855                           ;	Low-Power Timer1 Oscillator Enable bit
  3856                           ;	LPT1OSC = 0x0, unprogrammed default
  3857                           ;	MCLR Pin Enable bit
  3858                           ;	MCLRE = 0x1, unprogrammed default
  3859  300005                     	org	3145733
  3860  300005  83                 	db	131
  3861                           
  3862                           ;Config register CONFIG4L @ 0x300006
  3863                           ;	Stack Full/Underflow Reset Enable bit
  3864                           ;	STVREN = 0x1, unprogrammed default
  3865                           ;	Single-Supply ICSP Enable bit
  3866                           ;	LVP = OFF, Single-Supply ICSP disabled
  3867                           ;	Extended Instruction Set Enable bit
  3868                           ;	XINST = 0x0, unprogrammed default
  3869                           ;	Background Debugger Enable bit
  3870                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3871  300006                     	org	3145734
  3872  300006  81                 	db	129
  3873                           
  3874                           ; Padding undefined space
  3875  300007                     	org	3145735
  3876  300007  FF                 	db	255
  3877                           
  3878                           ;Config register CONFIG5L @ 0x300008
  3879                           ;	unspecified, using default values
  3880                           ;	Code Protection bit
  3881                           ;	CP0 = 0x1, unprogrammed default
  3882                           ;	Code Protection bit
  3883                           ;	CP1 = 0x1, unprogrammed default
  3884                           ;	Code Protection bit
  3885                           ;	CP2 = 0x1, unprogrammed default
  3886                           ;	Code Protection bit
  3887                           ;	CP3 = 0x1, unprogrammed default
  3888  300008                     	org	3145736
  3889  300008  0F                 	db	15
  3890                           
  3891                           ;Config register CONFIG5H @ 0x300009
  3892                           ;	unspecified, using default values
  3893                           ;	Boot Block Code Protection bit
  3894                           ;	CPB = 0x1, unprogrammed default
  3895                           ;	Data EEPROM Code Protection bit
  3896                           ;	CPD = 0x1, unprogrammed default
  3897  300009                     	org	3145737
  3898  300009  C0                 	db	192
  3899                           
  3900                           ;Config register CONFIG6L @ 0x30000A
  3901                           ;	unspecified, using default values
  3902                           ;	Write Protection bit
  3903                           ;	WRT0 = 0x1, unprogrammed default
  3904                           ;	Write Protection bit
  3905                           ;	WRT1 = 0x1, unprogrammed default
  3906                           ;	Write Protection bit
  3907                           ;	WRT2 = 0x1, unprogrammed default
  3908                           ;	Write Protection bit
  3909                           ;	WRT3 = 0x1, unprogrammed default
  3910  30000A                     	org	3145738
  3911  30000A  0F                 	db	15
  3912                           
  3913                           ;Config register CONFIG6H @ 0x30000B
  3914                           ;	unspecified, using default values
  3915                           ;	Configuration Register Write Protection bit
  3916                           ;	WRTC = 0x1, unprogrammed default
  3917                           ;	Boot Block Write Protection bit
  3918                           ;	WRTB = 0x1, unprogrammed default
  3919                           ;	Data EEPROM Write Protection bit
  3920                           ;	WRTD = 0x1, unprogrammed default
  3921  30000B                     	org	3145739
  3922  30000B  E0                 	db	224
  3923                           
  3924                           ;Config register CONFIG7L @ 0x30000C
  3925                           ;	unspecified, using default values
  3926                           ;	Table Read Protection bit
  3927                           ;	EBTR0 = 0x1, unprogrammed default
  3928                           ;	Table Read Protection bit
  3929                           ;	EBTR1 = 0x1, unprogrammed default
  3930                           ;	Table Read Protection bit
  3931                           ;	EBTR2 = 0x1, unprogrammed default
  3932                           ;	Table Read Protection bit
  3933                           ;	EBTR3 = 0x1, unprogrammed default
  3934  30000C                     	org	3145740
  3935  30000C  0F                 	db	15
  3936                           
  3937                           ;Config register CONFIG7H @ 0x30000D
  3938                           ;	unspecified, using default values
  3939                           ;	Boot Block Table Read Protection bit
  3940                           ;	EBTRB = 0x1, unprogrammed default
  3941  30000D                     	org	3145741
  3942  30000D  40                 	db	64
  3943                           tosu	equ	0xFFF
  3944                           tosh	equ	0xFFE
  3945                           tosl	equ	0xFFD
  3946                           stkptr	equ	0xFFC
  3947                           pclatu	equ	0xFFB
  3948                           pclath	equ	0xFFA
  3949                           pcl	equ	0xFF9
  3950                           tblptru	equ	0xFF8
  3951                           tblptrh	equ	0xFF7
  3952                           tblptrl	equ	0xFF6
  3953                           tablat	equ	0xFF5
  3954                           prodh	equ	0xFF4
  3955                           prodl	equ	0xFF3
  3956                           indf0	equ	0xFEF
  3957                           postinc0	equ	0xFEE
  3958                           postdec0	equ	0xFED
  3959                           preinc0	equ	0xFEC
  3960                           plusw0	equ	0xFEB
  3961                           fsr0h	equ	0xFEA
  3962                           fsr0l	equ	0xFE9
  3963                           wreg	equ	0xFE8
  3964                           indf1	equ	0xFE7
  3965                           postinc1	equ	0xFE6
  3966                           postdec1	equ	0xFE5
  3967                           preinc1	equ	0xFE4
  3968                           plusw1	equ	0xFE3
  3969                           fsr1h	equ	0xFE2
  3970                           fsr1l	equ	0xFE1
  3971                           bsr	equ	0xFE0
  3972                           indf2	equ	0xFDF
  3973                           postinc2	equ	0xFDE
  3974                           postdec2	equ	0xFDD
  3975                           preinc2	equ	0xFDC
  3976                           plusw2	equ	0xFDB
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8

Data Sizes:
    Strings     133
    Constant    16
    Data        0
    BSS         21
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      41
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_19(CODE[4]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[9]), 
		 -> STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[5]), 
		 -> STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_escolheOpcoes
    _lcdPrintInicio->_atraso_s
    _lcdPrint->_lcd_str
    _atraso_s->___wmul
    _lcdInit->_lcdCommand
    _vent->_lcd_str
    _porta->_lcd_str
    _luz->_lcd_str
    _aquec->_lcd_str
    _lcd_str->_lcdData
    _lcdData->_digitalWrite
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _contrVent->___awdiv
    _pwmSet1->___wmul
    ___wmul->_adcRead
    ___awdiv->___wmul
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   34878
                            _adcInit
                          _contrVent
                      _escolheOpcoes
                             _kpInit
                            _lcdInit
                     _lcdPrintInicio
                            _pwmInit
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdPrintInicio                                       0     0      0   10133
                           _atraso_s
                         _lcdCommand
                           _lcdPrint
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcdPrint                                             0     0      0    4500
                         _lcdCommand
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _atraso_s                                             6     4      2    1133
                                             10 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    2643
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escolheOpcoes                                        5     5      0   18366
                                             13 COMRAM     5     5      0
                              _aquec
                         _kpDebounce
                             _kpRead
                                _luz
                              _porta
                               _vent
 ---------------------------------------------------------------------------------
 (2) _vent                                                 0     0      0    4500
                         _lcdCommand
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _porta                                                0     0      0    4500
                         _lcdCommand
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _luz                                                  0     0      0    4500
                         _lcdCommand
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (2) _aquec                                                0     0      0    4500
                         _lcdCommand
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    2965
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (3) _lcdData                                              2     2      0    1431
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           2     2      0    1535
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (4) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _contrVent                                            0     0      0    2688
                            ___awdiv
                             ___wmul
                            _adcRead
                            _pwmSet1
 ---------------------------------------------------------------------------------
 (2) _pwmSet1                                              5     5      0    1324
                                             10 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     767
                                              4 COMRAM     6     2      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             10 COMRAM     8     4      4
                             ___wmul (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    1048
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1048
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
     _pinMode
   _contrVent
     ___awdiv
       ___wmul (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___wmul
     _adcRead
     _pwmSet1
       ___lwdiv
       ___wmul
   _escolheOpcoes
     _aquec
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcd_str
         _lcdData
           _Delay40us
           _digitalWrite
     _kpDebounce
     _kpRead
     _luz
       _lcdCommand
       _lcd_str
     _porta
       _lcdCommand
       _lcd_str
     _vent
       _lcdCommand
       _lcd_str
   _kpInit
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _lcdPrintInicio
     _atraso_s
       ___wmul
     _lcdCommand
     _lcdPrint
       _lcdCommand
       _lcd_str
     _lcd_str
   _pwmInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      29       1       32.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      15        0.0%
DATA                 0      0      29       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug 01 16:18:46 2021

                     l84 0D9E                       l94 14B2                       l89 12D2  
                     l99 122A             ___awdiv@sign 0025                       _v0 0012  
                     _v1 0011                       _v2 0010                       _v3 000F  
    ___wmul@multiplicand 001C                      l104 127E                      l112 1376  
                    l115 0F1C                      l132 143C                      l109 13C6  
                    l134 144A                      l310 108A                      l231 0B32  
                    l135 1466                      l128 14E2                      l304 0F9A  
                    l234 116A                      l307 1326                      l155 1012  
                    l243 1566                      l316 1416                      l351 1508  
                    l256 157A                      l274 0C90                      l275 0CA8  
                    l292 153C                      l276 0CB0                      l197 08E4  
                    l279 1570                      l297 1524                      l582 0E62  
                    l842 10F6                      l849 10FE                      u210 153C  
                    u211 1538                      u220 1524                      u221 1520  
                    u310 0BAE                      u311 0BAA                      u304 0B7A  
                    u305 0B76                      u330 0BDE                      u331 0BDA  
                    u324 0BC4                      u325 0BC0                      u360 0C54  
                    u344 0BFC                      u361 0C50                      u345 0BF6  
                    u370 0C66                      u354 0C2C                      u371 0C62  
                    u355 0C26                      u380 0C7E                      u381 0C7A  
                    u390 0CA0                      u294 0B5A                      u391 0C9C  
                    u295 0B56                      _vel 0015                      _luz 1280  
                    wreg 000FE8         ??_lcdPrintInicio 0026                     l2000 0DF2  
                   l1200 0C56                     l2010 0E2C                     l2002 0DFA  
                   l1210 0CA0                     l1202 0C66                     l2020 0E52  
                   l2012 0E34                     l2004 0E02                     l1212 0CAC  
                   l1204 0C7E                     l2100 0CDE                     l2030 14DE  
                   l2022 0E5A                     l2014 0E36                     l2006 0E10  
                   l1070 152A                     l1206 0C84                     l2110 0D32  
                   l2016 0E3C                     l2008 0E16                     l1072 152C  
                   l1064 1526                     l1080 150E                     l1208 0C88  
                   l1160 0B34                     l2120 0D66                     l2112 0D36  
                   l2040 1048                     l2032 1014                     l2026 14B4  
                   l2018 0E42                     l2130 11E2                     l1082 1512  
                   l1074 150A                     l1170 0B44                     l1162 0B38  
                   l2122 0D7A                     l2114 0D4A                     l2106 0CE6  
                   l2050 105E                     l2042 104C                     l2034 103C  
                   l2028 14DC                     l2132 1224                     l1084 1514  
                   l1180 0B92                     l1172 0B86                     l1164 0B3C  
                   l2116 0D4E                     l2108 0D1E                     l2124 0D7E  
                   l2060 1078                     l2052 1062                     l2044 1050  
                   l2036 1040                     l2140 11B4                     l1190 0BDE  
                   l1182 0BAE                     l1166 0B40                     l2126 0D82  
                   l2118 0D62                     l2062 107E                     l2054 1068  
                   l2046 1054                     l2038 1044                     l2070 0E88  
                   l2142 11B8                     l2134 116C                     l2128 11D0  
                   l1192 0C0E                     l2064 1084                     l2056 106C  
                   l2048 105A                     l2080 0EC4                     l2072 0E94  
                   l1440 155C                     l2144 11BC                     l2136 11AC  
                   l1194 0C42                     l1178 0B8E                     l2058 1072  
                   l2090 0EFE                     l2082 0ED0                     l2074 0E9A  
                   l2066 0E64                     l2146 11C0                     l2138 11B0  
                   l1700 06C6                     l1196 0C44                     l1188 0BB2  
                   l2092 0F10                     l2084 0EDA                     l2076 0EB2  
                   l2068 0E7C                     l1436 1554                     l2148 11C4  
                   l1710 075E                     l1702 06E6                     l1198 0C54  
                   l2094 0CB2                     l2086 0EE6                     l2078 0EB8  
                   l1438 1558                     l1800 10CA                     l1720 07F8  
                   l1712 0780                     l1704 0708                     l2096 0CB6  
                   l2088 0EF8                     l1802 10E0                     l1730 088C  
                   l1722 0814                     l1714 079C                     l1706 0724  
                   l1810 1572                     l2098 0CD2                     l1804 10E8  
                   l1900 1144                     l1732 08A6                     l1724 082E  
                   l1716 07B6                     l1708 073E                     l1740 12DE  
                   l1820 12B4                     l1812 1280                     l1476 1568  
                   l1806 10EA                     l1902 115C                     l1734 08C6  
                   l1726 084E                     l1718 07D6                     l1750 1322  
                   l1742 12F2                     l1822 12C0                     l1814 1292  
                   l1830 1482                     l1910 1352                     l1808 10F0  
                   l1728 0870                     l1760 0F40                     l1752 0F20  
                   l1744 12F6                     l1736 12D6                     l1824 12C6  
                   l1816 129E                     l1840 122C                     l1832 1488  
                   l1920 0FAC                     l1912 1358                     l1904 1328  
                   l1770 0F8E                     l1762 0F54                     l1754 0F24  
                   l1746 130A                     l1738 12DA                     l1818 12A4  
                   l1850 1250                     l1842 123E                     l1834 1498  
                   l1826 1468                     l1930 0FD8                     l1914 136A  
                   l1906 1334                     l1772 0F96                     l1764 0F68  
                   l1756 0F28                     l1748 131E                     l1780 13EE  
                   l1860 1272                     l1844 1246                     l1852 1260  
                   l1836 14A0                     l1828 147A                     l1924 0FC0  
                   l1940 0FE8                     l1916 0F9C                     l1908 1340  
                   l1950 0956                     l1942 08E6                     l1790 1094  
                   l1782 14E4                     l1766 0F6C                     l1758 0F3C  
                   l1774 13C8                     l1870 139A                     l1862 1378  
                   l1854 1268                     l1846 1248                     l1838 14A6  
                   l1934 0FDE                     l1926 0FC4                     l1918 0FA8  
                   l1960 09EA                     l1952 0972                     l1944 0902  
                   l1880 1418                     l1792 10A6                     l1784 1500  
                   l1696 0698                     l1768 0F7E                     l1776 13D0  
                   l1864 138A                     l1872 13AA                     l1856 126A  
                   l1848 124A                     l1970 0A74                     l1962 09FC  
                   l1954 0984                     l1946 0914                     l1890 145E  
                   l1882 1432                     l1794 10AE                     l1698 06B4  
                   l1778 13EC                     l1874 13B2                     l1866 1392  
                   l1858 126C                     l1938 0FE4                     l1980 0B10  
                   l1972 0A98                     l1964 0A20                     l1956 09A8  
                   l1948 0934                     l1884 143A                     l1796 10B6  
                   l1788 108C                     l1876 13B4                     l1868 1394  
                   l1974 0ABE                     l1966 0A46                     l1958 09CE  
                   l1990 0DBE                     l1982 0DA0                     l1886 1450  
                   l1798 10C4                     l1894 1102                     l1878 13BA  
                   l1976 0ADA                     l1968 0A62                     l1992 0DCC  
                   l1984 0DA4                     l1888 1456                     l1896 1120  
                   l1978 0AEC                     l1994 0DD4                     l1986 0DB2  
                   l1898 113C                     l1996 0DD8                     l1988 0DBA  
                   l1998 0DE0                     ?_luz 0016                     STR_1 0675  
                   STR_2 066E                     STR_3 0675                     STR_4 0683  
                   STR_5 0656                     STR_6 065E                     STR_7 0688  
                   STR_8 0683                     STR_9 067C                     u1000 06B4  
                   u1001 06B0                     u1010 06C6                     u1011 06C2  
                   u1120 0814                     u1104 07C8                     u1040 0724  
                   u1024 06D8                     u1200 0F7E                     u1121 0810  
                   u1105 07C4                     u1041 0720                     u1025 06D4  
                   u1201 0F7A                     u1130 082E                     u1114 07E8  
                   u1050 073E                     u1034 06F8                     u1210 0F8E  
                   u1131 082A                     u1115 07E4                     u1051 073A  
                   u1035 06F4                     u1211 0F8A                     u1300 1432  
                   u1220 1416                     u1301 142E                     u1221 1412  
                   u1310 144A                     u1230 10A6                     u1311 1446  
                   u1231 10A2                     u1400 0984                     u1240 10C4  
                   u1160 088C                     u1144 0840                     u1080 079C  
                   u1064 0750                     u1320 0FBC                     u1401 0980  
                   u1241 10C0                     u1161 0888                     u1145 083C  
                   u1081 0798                     u1065 074C                     u1321 0FB8  
                   u1250 10E0                     u1170 08A6                     u1154 0860  
                   u1090 07B6                     u1074 0770                     u1330 0FD4  
                   u1251 10DC                     u1171 08A2                     u1155 085C  
                   u1091 07B2                     u1075 076C                     u1331 0FD0  
                   u1260 1292                     u1340 1012                     u1261 128E  
                   u1341 100E                     u1510 0ADA                     u1430 09EA  
                   u1414 099A                     u1350 0902                     u1270 147A  
                   u1511 0AD6                     u1431 09E6                     u1415 0996  
                   u1351 08FE                     u1271 1476                     u1520 0AEC  
                   u1504 0AAE                     u1440 09FC                     u1424 09BE  
                   u1360 0914                     u1600 0E52                     u1184 08B8  
                   u1280 123E                     u1521 0AE8                     u1505 0AAA  
                   u1441 09F8                     u1425 09BA                     u1361 0910  
                   u1601 0E4E                     u1185 08B4                     u1281 123A  
                   u1194 08D8                     u1290 138A                     u1610 0CD2  
                   u1195 08D4                     u1291 1386                     u1611 0CCE  
                   u1534 0B02                     u1470 0A62                     u1454 0A12  
                   u1390 0972                     u1374 0926                     u1550 0DB2  
                   u1630 0D1E                     u1535 0AFE                     u1471 0A5E  
                   u1455 0A0E                     u1391 096E                     u1375 0922  
                   u1551 0DAE                     u1631 0D1A                     u1544 0B26  
                   u1480 0A74                     u1464 0A36                     u1384 0946  
                   u1560 0DCC                     u1640 0D32                     u1624 0CFE  
                   u1545 0B22                     u1481 0A70                     u1465 0A32  
                   u1385 0942                     u1561 0DC8                     u1641 0D2E  
                   u1625 0CF8                     u1570 0DF2                     u1650 0D4A  
                   u1571 0DEE                     u1651 0D46                     u1580 0E10  
                   u1660 0D62                     u1581 0E0C                     u1661 0D5E  
                   u1494 0A8A                     u1590 0E2C                     u1670 0D7A  
                   u1495 0A86                     u1591 0E28                     u1671 0D76  
                   u1680 0D9E                     u1681 0D9A                     u1690 11E2  
                   u1691 11DE                     _main 116C                     _vent 1468  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000                    ??_luz 0023                    ?_main 0016  
        __end_of_adcInit 14E4          __end_of_adcRead 1468          __end_of___awdiv 0E64  
                  STR_10 0666                    STR_11 0644                    STR_12 064D  
                  STR_13 0622                    STR_14 0611                    STR_15 0633  
                  STR_16 0692                    STR_17 0692                    STR_18 068D  
                  STR_19 0692                    ?_vent 0016          ___awdiv@divisor 0022  
        __end_of___lwdiv 1100          ___awdiv@counter 0024                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
          _escolheOpcoes 0CB2          __end_of_lcdData 1328          __end_of_lcdInit 108C  
        __end_of_lcd_str 1418                    _aquec 1378                    _tecla 0028  
        __end_of_pinMode 0B34                    _valor 0005                    _porta 122C  
                  tablat 000FF5          __end_of_pwmSet1 116C          __end_of_pwmInit 1568  
                  status 000FD8         __end_of_Delay2ms 1526     __end_of_digitalWrite 08E6  
        __initialization 153E             __end_of_main 11D0       __size_of_Delay40us 0018  
           __end_of_vent 14B4                   ??_main 0028                   ??_vent 0023  
          __activetblptr 000002           ?_escolheOpcoes 0016                   ?_aquec 0016  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0020  
                 ?_porta 0016         __end_of_lcdPrint 1378         __end_of_atraso_s 1014  
                 ___wmul 14E4                ??_adcInit 001C                ??_adcRead 0018  
              ??___awdiv 0024                ??___lwdiv 001A                   _kpInit 1568  
                 _kpRead 1572                   clear_0 1544         ___awdiv@quotient 0026  
              ??_lcdData 001C                   isa$std 000001                ??_lcdInit 001E  
              ??_lcd_str 0020                ??_pinMode 001A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_pwmSet1 0020                ??_pwmInit 0016        __end_of_Delay40us 153E  
             __accesstop 0080  __end_of__initialization 154A            ___rparam_used 000001  
            pinMode@type 0018           __pcstackCOMRAM 0016            __end_of_aquec 13C8  
          __end_of_porta 1280          ??_escolheOpcoes 0023                ?_Delay2ms 0016  
                ??_aquec 0023                  ??_porta 0023       __size_of_contrVent 005C  
  __size_of_digitalWrite 024E               __pnvCOMRAM 0028               _lcdCommand 0F1E  
                ?___wmul 001A                  ?_kpInit 0016                  ?_kpRead 0016  
             _kpDebounce 0B34               ??_Delay2ms 0017             _digitalWrite 0698  
              ?_lcdPrint 0016                ?_atraso_s 0020                  __Hparam 0000  
                __Lparam 0000          kpDebounce@old_D 001B          kpDebounce@tempo 0014  
             _estadoVent 000B                  _adcInit 14B4                  _adcRead 1418  
                ___awdiv 0DA0          __size_of___wmul 0026                  ___lwdiv 108C  
           __psmallconst 0600        __end_of_contrVent 122C          __size_of_kpInit 000A  
        __size_of_kpRead 000A                  __pcinit 153E                  _lcdData 12D4  
                __ramtop 0600                  _lcdInit 1014                  __ptext0 116C  
                __ptext1 1554                  __ptext2 0E64                  __ptext3 1328  
                __ptext4 0F9C                  __ptext5 1014                  __ptext6 1568  
                __ptext7 0CB2                  __ptext8 1468                  __ptext9 122C  
                _display 0013                  _lcd_str 13C8             __size_of_luz 0054  
                _pinMode 08E6                  _pwmSet1 1100                  _pwmInit 1554  
             ??_lcdPrint 0023                Delay2ms@i 0017      kpDebounce@valorNovo 0003  
   end_of_initialization 154A               ??_atraso_s 0022            __Lmediumconst 0000  
__size_of_lcdPrintInicio 00BA              ?_lcdCommand 0016                  postinc0 000FEE  
            ?_kpDebounce 0016                _PORTCbits 000F82                _PORTEbits 000F84  
         _valor@ssd$F502 0601                _Delay40us 1526               lcd_str@str 001E  
         adcRead@ADvalor 0018           __end_of___wmul 150A           __end_of_kpInit 1572  
         __end_of_kpRead 157C   __end_of_valor@ssd$F502 0611      start_initialization 153E  
            __end_of_luz 12D4        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017E               ?_Delay40us 0016           adcRead@channel 0016  
               ??___wmul 001E                 ??_kpInit 0016                 ??_kpRead 0018  
  __end_of_escolheOpcoes 0DA0              __pbssCOMRAM 0001               pinMode@pin 0016  
      __size_of_lcdPrint 0050        __size_of_atraso_s 0078           _lcdPrintInicio 0E64  
       ___lwdiv@dividend 0016                 ?_adcInit 0016                 ?_adcRead 0016  
               ?___awdiv 0020                 ?___lwdiv 0016         escolheOpcoes@aux 0026  
               ?_lcdData 0016                 ?_lcdInit 0016                 ?_lcd_str 001E  
          lcdCommand@cmd 001D                _contrVent 11D0              __smallconst 0600  
               ?_pinMode 0016                 ?_pwmSet1 0016                 ?_pwmInit 0016  
              _estadoLuz 0009         ___lwdiv@quotient 001A           __size_of_aquec 0050  
         __size_of_porta 0054   __end_of_lcdPrintInicio 0F1E              ??_Delay40us 0016  
         ___wmul@product 001E             ??_lcdCommand 001C               pwmSet1@val 0023  
           ??_kpDebounce 0016        ___wmul@multiplier 001A               ?_contrVent 0016  
        lcdCommand@old_D 001C    kpDebounce@valorAntigo 0001                 _Delay2ms 150A  
              atraso_s@i 0022                atraso_s@j 0024                atraso_s@k 0025  
              atraso_s@t 0020       __end_of_lcdCommand 0F9C             lcdData@old_D 001D  
           lcdData@valor 001C          ?_lcdPrintInicio 0016       __end_of_kpDebounce 0CB2  
               __Hrparam 0000                 __Lrparam 0000              _estadoAquec 0007  
            _estadoPorta 000D         __size_of_adcInit 0030         __size_of_adcRead 0050  
       __size_of___awdiv 00C4         __size_of___lwdiv 0074          pwmSet1@porcento 0022  
       __size_of_lcdData 0054         __size_of_lcdInit 0078         __size_of_lcd_str 0050  
       __size_of_pinMode 024E          ___lwdiv@divisor 0018          ___lwdiv@counter 001C  
               __ptext10 1280                 __ptext11 1572                 __ptext20 11D0  
               __ptext12 0B34                 __ptext21 1100                 __ptext13 1378  
               __ptext22 14E4                 __ptext14 13C8                 __ptext23 108C  
               __ptext15 12D4                 __ptext24 1418                 __ptext16 0F1E  
               __ptext25 0DA0                 __ptext17 0698                 __ptext26 14B4  
               __ptext18 150A                 __ptext27 08E6                 __ptext19 1526  
               _lcdPrint 1328         __size_of_pwmSet1 006C         __size_of_pwmInit 0014  
               _atraso_s 0F9C            __size_of_main 0064            __size_of_vent 004C  
             Delay40us@i 0016                 isa$xinst 000000                 lcd_str@i 0022  
            ??_contrVent 0028            ?_digitalWrite 0016        digitalWrite@value 0018  
            kpDebounce@i 001F              kpDebounce@j 001E              kpDebounce@k 001C  
         ??_digitalWrite 001A          digitalWrite@pin 0016   __size_of_escolheOpcoes 00EE  
